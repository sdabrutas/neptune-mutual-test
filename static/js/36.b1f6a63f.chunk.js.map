{"version":3,"file":"static/js/36.b1f6a63f.chunk.js","mappings":"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","sources":["../node_modules/@ethersproject/properties/src.ts/index.ts","../node_modules/@ethersproject/properties/src.ts/_version.ts","../node_modules/@ethersproject/abstract-provider/src.ts/index.ts","../node_modules/@ethersproject/abstract-provider/src.ts/_version.ts","../node_modules/@ethersproject/networks/src.ts/index.ts","../node_modules/@ethersproject/networks/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/utf8.ts","../node_modules/@ethersproject/basex/src.ts/index.ts","../node_modules/@ethersproject/strings/src.ts/_version.ts","../node_modules/@ethersproject/strings/src.ts/idna.ts","../node_modules/@ethersproject/hash/src.ts/_version.ts","../node_modules/@ethersproject/hash/src.ts/namehash.ts","../node_modules/@ethersproject/sha2/src.ts/browser-sha2.ts","../node_modules/@ethersproject/sha2/src.ts/_version.ts","../node_modules/@ethersproject/base64/src.ts/browser-base64.ts","../node_modules/@ethersproject/web/src.ts/_version.ts","../node_modules/@ethersproject/web/src.ts/browser-geturl.ts","../node_modules/@ethersproject/web/src.ts/index.ts","../node_modules/@ethersproject/providers/src.ts/_version.ts","../node_modules/@ethersproject/constants/src.ts/bignumbers.ts","../node_modules/node_modules/minimalistic-assert/index.js","../node_modules/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/utils.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/node_modules/inherits/inherits_browser.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/node_modules/elliptic/lib/elliptic/curves.js","../node_modules/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/@ethersproject/signing-key/lib.esm/elliptic.js","../node_modules/node_modules/elliptic/lib/elliptic.js","../node_modules/@ethersproject/signing-key/src.ts/index.ts","../node_modules/@ethersproject/signing-key/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/_version.ts","../node_modules/@ethersproject/transactions/src.ts/index.ts","../node_modules/@ethersproject/providers/src.ts/formatter.ts","../node_modules/@ethersproject/constants/src.ts/addresses.ts","../node_modules/@ethersproject/providers/src.ts/base-provider.ts","../node_modules/@ethersproject/constants/src.ts/hashes.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@ethersproject/abstract-signer/src.ts/_version.ts","../node_modules/@ethersproject/abstract-signer/src.ts/index.ts","../node_modules/@ethersproject/hash/src.ts/id.ts","../node_modules/@ethersproject/hash/src.ts/typed-data.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ws.ts","../node_modules/@ethersproject/providers/src.ts/websocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/url-json-rpc-provider.ts","../node_modules/@ethersproject/providers/src.ts/alchemy-provider.ts","../node_modules/@ethersproject/providers/src.ts/cloudflare-provider.ts","../node_modules/@ethersproject/providers/src.ts/etherscan-provider.ts","../node_modules/@ethersproject/random/src.ts/shuffle.ts","../node_modules/@ethersproject/providers/src.ts/fallback-provider.ts","../node_modules/@ethersproject/providers/src.ts/browser-ipc-provider.ts","../node_modules/@ethersproject/providers/src.ts/infura-provider.ts","../node_modules/@ethersproject/providers/src.ts/json-rpc-batch-provider.ts","../node_modules/@ethersproject/providers/src.ts/nodesmith-provider.ts","../node_modules/@ethersproject/providers/src.ts/pocket-provider.ts","../node_modules/@ethersproject/providers/src.ts/web3-provider.ts","../node_modules/@ethersproject/providers/src.ts/index.ts","../node_modules/bech32/index.js","../node_modules/hash.js/lib/hash.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/inherits/inherits_browser.js","../node_modules/minimalistic-assert/index.js"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function defineReadOnly<T, K extends keyof T>(object: T, name: K, value: T[K]): void {\n    Object.defineProperty(object, name, {\n        enumerable: true,\n        value: value,\n        writable: false,\n    });\n}\n\n// Crawl up the constructor chain to find a static method\nexport function getStatic<T>(ctor: any, key: string): T {\n    for (let i = 0; i < 32; i++) {\n        if (ctor[key]) { return ctor[key]; }\n        if (!ctor.prototype || typeof(ctor.prototype) !== \"object\") { break; }\n        ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n    }\n    return null;\n}\n\nexport type Deferrable<T> = {\n    [ K in keyof T ]: T[K] | Promise<T[K]>;\n}\n\n\ntype Result = { key: string, value: any};\n\nexport async function resolveProperties<T>(object: Readonly<Deferrable<T>>): Promise<T> {\n    const promises: Array<Promise<Result>> = Object.keys(object).map((key) => {\n        const value = object[<keyof Deferrable<T>>key];\n        return Promise.resolve(value).then((v) => ({ key: key, value: v }));\n    });\n\n    const results = await Promise.all(promises);\n\n    return results.reduce((accum, result) => {\n        accum[<keyof T>(result.key)] = result.value;\n        return accum;\n    }, <T>{ });\n}\n\nexport function checkProperties(object: any, properties: { [ name: string ]: boolean }): void {\n    if (!object || typeof(object) !== \"object\") {\n        logger.throwArgumentError(\"invalid object\", \"object\", object);\n    }\n\n    Object.keys(object).forEach((key) => {\n        if (!properties[key]) {\n            logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n        }\n    });\n}\n\nexport function shallowCopy<T>(object: T): T {\n    const result: any = {};\n    for (const key in object) { result[key] = object[key]; }\n    return result;\n}\n\nconst opaque: { [key: string]: boolean } = { bigint: true, boolean: true, \"function\": true, number: true, string: true };\n\nfunction _isFrozen(object: any): boolean {\n\n    // Opaque objects are not mutable, so safe to copy by assignment\n    if (object === undefined || object === null || opaque[typeof(object)]) { return true; }\n\n    if (Array.isArray(object) || typeof(object) === \"object\") {\n        if (!Object.isFrozen(object)) { return false; }\n\n        const keys = Object.keys(object);\n        for (let i = 0; i < keys.length; i++) {\n            let value: any = null;\n            try {\n                value = object[keys[i]];\n            } catch (error) {\n                // If accessing a value triggers an error, it is a getter\n                // designed to do so (e.g. Result) and is therefore \"frozen\"\n                continue;\n            }\n\n            if (!_isFrozen(value)) { return false; }\n        }\n\n        return true;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\n// Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\nfunction _deepCopy(object: any): any {\n\n    if (_isFrozen(object)) { return object; }\n\n    // Arrays are mutable, so we need to create a copy\n    if (Array.isArray(object)) {\n        return Object.freeze(object.map((item) => deepCopy(item)));\n    }\n\n    if (typeof(object) === \"object\") {\n        const result: { [ key: string ]: any } = {};\n        for (const key in object) {\n            const value = object[key];\n            if (value === undefined) { continue; }\n            defineReadOnly(result, key, deepCopy(value));\n        }\n\n        return result;\n    }\n\n    return logger.throwArgumentError(`Cannot deepCopy ${ typeof(object) }`, \"object\", object);\n}\n\nexport function deepCopy<T>(object: T): T {\n    return _deepCopy(object);\n}\n\nexport class Description<T = any> {\n    constructor(info: { [ K in keyof T ]: T[K] }) {\n        for (const key in info) {\n            (<any>this)[key] = deepCopy(info[key]);\n        }\n    }\n}\n","export const version = \"properties/5.5.0\";\n","\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { BytesLike, isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { Deferrable, Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { AccessListish, Transaction } from \"@ethersproject/transactions\";\nimport { OnceBlockable } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\n\nexport type TransactionRequest = {\n    to?: string,\n    from?: string,\n    nonce?: BigNumberish,\n\n    gasLimit?: BigNumberish,\n    gasPrice?: BigNumberish,\n\n    data?: BytesLike,\n    value?: BigNumberish,\n    chainId?: number\n\n    type?: number;\n    accessList?: AccessListish;\n\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n\n    customData?: Record<string, any>;\n}\n\nexport interface TransactionResponse extends Transaction {\n    hash: string;\n\n    // Only if a transaction has been mined\n    blockNumber?: number,\n    blockHash?: string,\n    timestamp?: number,\n\n    confirmations: number,\n\n    // Not optional (as it is in Transaction)\n    from: string;\n\n    // The raw transaction\n    raw?: string,\n\n    // This function waits until the transaction has been mined\n    wait: (confirmations?: number) => Promise<TransactionReceipt>\n};\n\nexport type BlockTag = string | number;\n\nexport interface _Block {\n    hash: string;\n    parentHash: string;\n    number: number;\n\n    timestamp: number;\n    nonce: string;\n    difficulty: number;\n    _difficulty: BigNumber;\n\n    gasLimit: BigNumber;\n    gasUsed: BigNumber;\n\n    miner: string;\n    extraData: string;\n\n    baseFeePerGas?: null | BigNumber;\n}\n\nexport interface Block extends _Block {\n    transactions: Array<string>;\n}\n\nexport interface BlockWithTransactions extends _Block {\n    transactions: Array<TransactionResponse>;\n}\n\n\nexport interface Log {\n    blockNumber: number;\n    blockHash: string;\n    transactionIndex: number;\n\n    removed: boolean;\n\n    address: string;\n    data: string;\n\n    topics: Array<string>;\n\n    transactionHash: string;\n    logIndex: number;\n}\n\nexport interface TransactionReceipt {\n    to: string;\n    from: string;\n    contractAddress: string,\n    transactionIndex: number,\n    root?: string,\n    gasUsed: BigNumber,\n    logsBloom: string,\n    blockHash: string,\n    transactionHash: string,\n    logs: Array<Log>,\n    blockNumber: number,\n    confirmations: number,\n    cumulativeGasUsed: BigNumber,\n    effectiveGasPrice: BigNumber,\n    byzantium: boolean,\n    type: number;\n    status?: number\n};\n\nexport interface FeeData {\n    maxFeePerGas: null | BigNumber;\n    maxPriorityFeePerGas: null | BigNumber;\n    gasPrice: null | BigNumber;\n}\n\nexport interface EventFilter {\n    address?: string;\n    topics?: Array<string | Array<string> | null>;\n}\n\nexport interface Filter extends EventFilter {\n    fromBlock?: BlockTag,\n    toBlock?: BlockTag,\n}\n\nexport interface FilterByBlockHash extends EventFilter {\n    blockHash?: string;\n}\n\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\n\nexport abstract class ForkEvent extends Description {\n    readonly expiry: number;\n\n    readonly _isForkEvent?: boolean;\n\n    static isForkEvent(value: any): value is ForkEvent {\n        return !!(value && value._isForkEvent);\n    }\n}\n\nexport class BlockForkEvent extends ForkEvent {\n    readonly blockHash: string;\n\n    readonly _isBlockForkEvent?: boolean;\n\n    constructor(blockHash: string, expiry?: number) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\n\nexport class TransactionForkEvent extends ForkEvent {\n    readonly hash: string;\n\n    readonly _isTransactionOrderForkEvent?: boolean;\n\n    constructor(hash: string, expiry?: number) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\n\nexport class TransactionOrderForkEvent extends ForkEvent {\n    readonly beforeHash: string;\n    readonly afterHash: string;\n\n    constructor(beforeHash: string, afterHash: string, expiry?: number) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n\nexport type EventType = string | Array<string | Array<string>> | EventFilter | ForkEvent;\n\nexport type Listener = (...args: Array<any>) => void;\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider implements OnceBlockable {\n\n    // Network\n    abstract getNetwork(): Promise<Network>;\n\n    // Latest State\n    abstract getBlockNumber(): Promise<number>;\n    abstract getGasPrice(): Promise<BigNumber>;\n    async getFeeData(): Promise<FeeData> {\n        const { block, gasPrice } = await resolveProperties({\n            block: this.getBlock(\"latest\"),\n            gasPrice: this.getGasPrice().catch((error) => {\n                // @TODO: Why is this now failing on Calaveras?\n                //console.log(error);\n                return null;\n            })\n        });\n\n        let maxFeePerGas = null, maxPriorityFeePerGas = null;\n\n        if (block && block.baseFeePerGas) {\n            // We may want to compute this more accurately in the future,\n            // using the formula \"check if the base fee is correct\".\n            // See: https://eips.ethereum.org/EIPS/eip-1559\n            maxPriorityFeePerGas = BigNumber.from(\"2500000000\");\n            maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n        }\n\n        return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n    }\n\n    // Account\n    abstract getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber>;\n    abstract getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number>;\n    abstract getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> ;\n    abstract getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n\n    // Execution\n    abstract sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse>;\n    abstract call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string>;\n    abstract estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber>;\n\n    // Queries\n    abstract getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block>;\n    abstract getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions>;\n    abstract getTransaction(transactionHash: string): Promise<TransactionResponse>;\n    abstract getTransactionReceipt(transactionHash: string): Promise<TransactionReceipt>;\n\n    // Bloom-filter Queries\n    abstract getLogs(filter: Filter): Promise<Array<Log>>;\n\n    // ENS\n    abstract resolveName(name: string | Promise<string>): Promise<null | string>;\n    abstract lookupAddress(address: string | Promise<string>): Promise<null | string>;\n\n    // Event Emitter (ish)\n    abstract on(eventName: EventType, listener: Listener): Provider;\n    abstract once(eventName: EventType, listener: Listener): Provider;\n    abstract emit(eventName: EventType, ...args: Array<any>): boolean\n    abstract listenerCount(eventName?: EventType): number;\n    abstract listeners(eventName?: EventType): Array<Listener>;\n    abstract off(eventName: EventType, listener?: Listener): Provider;\n    abstract removeAllListeners(eventName?: EventType): Provider;\n\n    // Alias for \"on\"\n    addListener(eventName: EventType, listener: Listener): Provider {\n        return this.on(eventName, listener);\n    }\n\n    // Alias for \"off\"\n    removeListener(eventName: EventType, listener: Listener): Provider {\n        return this.off(eventName, listener);\n    }\n\n    // @TODO: This *could* be implemented here, but would pull in events...\n    abstract waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt>;\n\n    readonly _isProvider: boolean;\n\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n\n    static isProvider(value: any): value is Provider {\n        return !!(value && value._isProvider);\n    }\n\n/*\n    static getResolver(network: Network, callable: CallTransactionable, namehash: string): string {\n        // No ENS...\n        if (!network.ensAddress) {\n            errors.throwError(\n                \"network does support ENS\",\n                errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // Not a namehash\n        if (!isHexString(namehash, 32)) {\n            errors.throwArgumentError(\"invalid name hash\", \"namehash\", namehash);\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        let data = \"0x0178b8bf\" + namehash.substring(2);\n        let transaction = { to: network.ensAddress, data: data };\n\n        return provider.call(transaction).then((data) => {\n            return provider.formatter.callAddress(data);\n        });\n    }\n\n    static resolveNamehash(network: Network, callable: CallTransactionable, namehash: string): string {\n        return this.getResolver(network, callable, namehash).then((resolverAddress) => {\n            if (!resolverAddress) { return null; }\n\n            // keccak256(\"addr(bytes32)\")\n            let data = \"0x3b3b57de\" + namehash(name).substring(2);\n            let transaction = { to: resolverAddress, data: data };\n            return callable.call(transaction).then((data) => {\n                return this.formatter.callAddress(data);\n            });\n\n        })\n    }\n*/\n}\n","export const version = \"abstract-provider/5.5.1\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Network, Networkish } from \"./types\";\n\nexport {\n    Network,\n    Networkish\n};\n\ntype DefaultProviderFunc = (providers: any, options?: any) => any;\n\ninterface Renetworkable extends DefaultProviderFunc {\n    renetwork: (network: Network) => DefaultProviderFunc;\n};\n\nfunction isRenetworkable(value: any): value is Renetworkable {\n    return (value && typeof(value.renetwork) === \"function\");\n}\n\nfunction ethDefaultProvider(network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (options == null) { options = { }; }\n        const providerList: Array<any> = [];\n\n        if (providers.InfuraProvider) {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            } catch(error) { }\n        }\n\n        if (providers.EtherscanProvider) {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            } catch(error) { }\n        }\n\n        if (providers.AlchemyProvider) {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            } catch(error) { }\n        }\n\n        if (providers.PocketProvider) {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [ \"goerli\", \"ropsten\", \"rinkeby\" ];\n            try {\n                const provider = new providers.PocketProvider(network);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            } catch(error) { }\n        }\n\n        if (providers.CloudflareProvider) {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            } catch(error) { }\n        }\n\n        if (providerList.length === 0) { return null; }\n\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            } else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n\n        return providerList[0];\n    };\n\n    func.renetwork = function(network: Network) {\n        return ethDefaultProvider(network);\n    };\n\n    return func;\n}\n\nfunction etcDefaultProvider(url: string, network: string | Network): Renetworkable {\n    const func = function(providers: any, options?: any): any {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n\n        return null;\n    };\n\n    func.renetwork = function(network: Network) {\n        return etcDefaultProvider(url, network);\n    };\n\n    return func;\n}\n\nconst homestead: Network = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\n\nconst ropsten: Network = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\n\nconst classicMordor: Network = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n\n// See: https://chainlist.org\nconst networks: { [name: string]: Network } = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n\n    homestead: homestead,\n    mainnet: homestead,\n\n    morden: { chainId: 2, name: \"morden\" },\n\n    ropsten: ropsten,\n    testnet: ropsten,\n\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n\n\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n\n    xdai: { chainId: 100, name: \"xdai\" },\n\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n}\n\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network: Networkish): Network {\n    // No network (null)\n    if (network == null) { return null; }\n\n    if (typeof(network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n\n    if (typeof(network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) { return null; }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n\n    const standard  = networks[network.name];\n\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof(network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider: DefaultProviderFunc = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        } else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n","export const version = \"networks/5.5.2\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n\nexport enum UnicodeNormalizationForm {\n    current  = \"\",\n    NFC      = \"NFC\",\n    NFD      = \"NFD\",\n    NFKC     = \"NFKC\",\n    NFKD     = \"NFKD\"\n};\n\nexport enum Utf8ErrorReason {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    UNEXPECTED_CONTINUE   = \"unexpected continuation byte\",\n\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    BAD_PREFIX            = \"bad codepoint prefix\",\n\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    OVERRUN               = \"string overrun\",\n\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    MISSING_CONTINUE      = \"missing continuation byte\",\n\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    OUT_OF_RANGE          = \"out of UTF-8 range\",\n\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    UTF16_SURROGATE       = \"UTF-16 surrogate\",\n\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    OVERLONG              = \"overlong representation\",\n};\n\n\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number) => number;\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n    return logger.throwArgumentError(`invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: ArrayLike<number>, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n// Common error handing strategies\nexport const Utf8ErrorFuncs: { [ name: string ]: Utf8ErrorFunc } = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    bytes = arrayify(bytes);\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            } else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Uint8Array {\n\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return arrayify(result);\n};\n\nfunction escapeChar(value: number) {\n    const hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\n\nexport function _toEscapedUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return '\"' + getUtf8CodePoints(bytes, onError).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8:  return \"\\\\b\";\n                case 9:  return \"\\\\t\";\n                case 10: return \"\\\\n\"\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\n\nexport function _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\nexport function toUtf8CodePoints(str: string, form: UnicodeNormalizationForm = UnicodeNormalizationForm.current): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nexport class BaseX {\n    readonly alphabet: string;\n    readonly base: number;\n\n    _alphabetMap: { [ character: string ]: number };\n    _leader: string;\n\n    constructor(alphabet: string) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n\n        defineReadOnly(this, \"_alphabetMap\", { });\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n\n    encode(value: BytesLike): string {\n        let source = arrayify(value);\n\n        if (source.length === 0) { return \"\"; }\n\n        let digits = [ 0 ]\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n\n        let string = \"\"\n\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n\n        return string;\n    }\n\n    decode(value: string): Uint8Array {\n        if (typeof(value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n\n        let bytes: Array<number> = [];\n        if (value.length === 0) { return new Uint8Array(bytes); }\n\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0)\n        }\n\n        return arrayify(new Uint8Array(bytes.reverse()))\n    }\n}\n\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\n\nexport { Base32, Base58 };\n\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n","export const version = \"strings/5.5.0\";\n","\"use strict\";\n\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\n\ntype Ranged = {\n    l: number,          // Lo value\n    h: number,          // High value (less the lo)\n    d?: number,         // Delta/stride (default: 1)\n    s?: number,         // Shift (default: 1)\n    e?: Array<number>   // Exceptions to skip\n};\n\ntype Table = { [ src: number ]: Array<number> };\n\nfunction bytes2(data: string): Array<number> {\n    if ((data.length % 4) !== 0) { throw new Error(\"bad data\"); }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\n\nfunction createTable(data: string, func?: (value: string) => Array<number>): Table {\n    if (!func) {\n        func = function(value: string) { return [ parseInt(value, 16) ]; }\n    }\n\n    let lo = 0;\n\n    let result: Table = { };\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n\n    return result;\n}\n\nfunction createRangeTable(data: string): Array<Ranged> {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        } else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\n\nfunction matchMap(value: number, ranges: Array<Ranged>): Ranged {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) { continue; }\n            return range;\n        }\n    }\n    return null;\n}\n\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\n\nconst Table_B_2_ranges: Array<Ranged> = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [ 23 ], l: 127 },\n    { h: 54, s: 1, e: [ 48 ], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [ 2, 6, 8 ], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [ 18, 24, 66 ], l: 19, d: 2 },\n    { h: 26, s: 32, e: [ 17 ], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [ 38 ], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [ 1, 4, 5, 7, 8, 11, 12, 17 ], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [ 2, 7, 8, 17 ], l: 52 },\n    { h: 24, s: -120023, e: [ 2, 7, 13, 15, 16, 17 ], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [ 17 ], l: 56 },\n    { h: 24, s: -119601, e: [ 17 ], l: 58 },\n    { h: 24, s: -119659, e: [ 17 ], l: 58 },\n    { h: 24, s: -119717, e: [ 17 ], l: 58 },\n    { h: 24, s: -119775, e: [ 17 ], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\n\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\n\n\nfunction flatten(values: Array<Array<number>>): Array<number> {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, [ ]);\n}\n\nexport function _nameprepTableA1(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\n\nexport function _nameprepTableB2(codepoint: number): Array<number> {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) { return [ codepoint + range.s ]; }\n\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) { return codes; }\n\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) { return [ codepoint + shift[0] ]; }\n\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) { return complex; }\n\n    return null;\n}\n\nexport function _nameprepTableC(codepoint: number): boolean {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\n\nexport function nameprep(value: string): string {\n\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) { return value.toLowerCase(); }\n\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) { return [ ]; }\n        if (code >= 0xfe00 && code <= 0xfe0f) { return [ ]; }\n\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) { return codesTableB2; }\n\n        // No Substitution\n        return [ code ];\n    }));\n\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n\n    // IDNA extras\n    let name = _toUtf8String(codes);\n\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n\n    // IDNA: 4.2.4\n    if (name.length > 63) { throw new Error(\"too long\"); }\n\n\n\n    return name;\n}\n\n","export const version = \"hash/5.5.0\";\n","import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nexport function isValidName(name: string): boolean {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\")\n            }\n        }\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let current = name;\n    let result: string | Uint8Array = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n\n        current = partition[2] || \"\";\n    }\n\n    return hexlify(result);\n}\n\n","\"use strict\";\n\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nimport { SupportedAlgorithm } from \"./types\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport function ripemd160(data: BytesLike): string {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha256(data: BytesLike): string {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function sha512(data: BytesLike): string {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\n\nexport function computeHmac(algorithm: SupportedAlgorithm, key: BytesLike, data: BytesLike): string {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n\n    return \"0x\" + hash.hmac((<any>hash)[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n\n","export const version = \"sha2/5.5.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function decode(textData: string): Uint8Array {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\n\nexport function encode(data: BytesLike): string {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n\n\n","export const version = \"web/5.5.1\";\n","\"use strict\";\n\nimport { arrayify } from \"@ethersproject/bytes\";\n\nimport type { GetUrlResponse, Options } from \"./types\";\n\nexport { GetUrlResponse, Options };\n\nexport async function getUrl(href: string, options?: Options): Promise<GetUrlResponse> {\n    if (options == null) { options = { }; }\n\n    const request: RequestInit = {\n        method: (options.method || \"GET\"),\n        headers: (options.headers || { }),\n        body: (options.body || undefined),\n    };\n\n    if (options.skipFetchSetup !== true) {\n        request.mode = <RequestMode>\"cors\";              // no-cors, cors, *same-origin\n        request.cache = <RequestCache>\"no-cache\";        // *default, no-cache, reload, force-cache, only-if-cached\n        request.credentials = <RequestCredentials>\"same-origin\";  // include, *same-origin, omit\n        request.redirect = <RequestRedirect>\"follow\";    // manual, *follow, error\n        request.referrer = \"client\";                     // no-referrer, *client\n    };\n\n    const response = await fetch(href, request);\n    const body = await response.arrayBuffer();\n\n    const headers: { [ name: string ]: string } = { };\n    if (response.headers.forEach) {\n        response.headers.forEach((value, key) => {\n            headers[key.toLowerCase()] = value;\n        });\n    } else {\n        (<() => Array<string>>((<any>(response.headers)).keys))().forEach((key) => {\n            headers[key.toLowerCase()] = response.headers.get(key);\n        });\n    }\n\n    return {\n        headers: headers,\n        statusCode: response.status,\n        statusMessage: response.statusText,\n        body: arrayify(new Uint8Array(body)),\n    }\n}\n","\"use strict\";\n\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { getUrl, GetUrlResponse, Options } from \"./geturl\";\n\nfunction staller(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\nfunction bodyify(value: any, type: string): string {\n    if (value == null) { return null; }\n\n    if (typeof(value) === \"string\") { return value; }\n\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            } catch (error) { };\n        }\n        return hexlify(value);\n    }\n\n    return value;\n}\n\n// Exported Types\nexport type ConnectionInfo = {\n    url: string,\n    headers?: { [key: string]: string | number }\n\n    user?: string,\n    password?: string,\n\n    allowInsecureAuthentication?: boolean,\n    allowGzip?: boolean,\n\n    throttleLimit?: number,\n    throttleSlotInterval?: number;\n    throttleCallback?: (attempt: number, url: string) => Promise<boolean>,\n\n    timeout?: number,\n};\n\nexport interface OnceBlockable {\n    once(eventName: \"block\", handler: () => void): void;\n}\n\nexport interface OncePollable {\n    once(eventName: \"poll\", handler: () => void): void;\n}\n\nexport type PollOptions = {\n    timeout?: number,\n    floor?: number,\n    ceiling?: number,\n    interval?: number,\n    retryLimit?: number,\n    onceBlock?: OnceBlockable\n    oncePoll?: OncePollable\n};\n\nexport type FetchJsonResponse = {\n    statusCode: number;\n    headers: { [ header: string ]: string };\n};\n\n\ntype Header = { key: string, value: string };\n\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData<T = Uint8Array>(connection: string | ConnectionInfo, body?: Uint8Array, processFunc?: (value: Uint8Array, response: FetchJsonResponse) => T): Promise<T> {\n\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof(connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit: 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0),\n        \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n\n    const throttleCallback = ((typeof(connection) === \"object\") ? connection.throttleCallback: null);\n    const throttleSlotInterval = ((typeof(connection) === \"object\" && typeof(connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval: 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0),\n        \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n\n    const headers: { [key: string]: Header } = { };\n\n    let url: string = null;\n\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options: Options = {\n        method: \"GET\",\n    };\n\n    let allow304 = false;\n\n    let timeout = 2 * 60 * 1000;\n\n    if (typeof(connection) === \"string\") {\n        url = connection;\n\n    } else if (typeof(connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n\n        url = connection.url;\n\n        if (typeof(connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n\n        options.allowGzip = !!connection.allowGzip;\n\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\n                    \"basic authentication requires a secure https url\",\n                    Logger.errors.INVALID_ARGUMENT,\n                    { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" }\n                );\n            }\n\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData): null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n\n            let result: T = <T><unknown>response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(<T><unknown>result);\n\n        } catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n\n    const flatHeaders: { [ key: string ]: string } = { };\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n\n    const runningTimeout = (function() {\n        let timer: NodeJS.Timer = null;\n        const promise: Promise<never> = new Promise(function(resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n\n        const cancel = function() {\n            if (timer == null) { return; }\n            clearTimeout(timer);\n            timer = null;\n        }\n\n        return { promise, cancel };\n    })();\n\n    const runningFetch = (async function() {\n\n        for (let attempt = 0; attempt < attemptLimit; attempt++) {\n            let response: GetUrlResponse = null;\n\n            try {\n                response = await getUrl(url, options);\n\n                if (attempt < attemptLimit) {\n                    if (response.statusCode === 301 || response.statusCode === 302) {\n                        // Redirection; for now we only support absolute locataions\n                        const location = response.headers.location || \"\";\n                        if (options.method === \"GET\" && location.match(/^https:/)) {\n                            url = response.headers.location;\n                            continue;\n                        }\n\n                    } else if (response.statusCode === 429) {\n                        // Exponential back-off throttling\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            let stall = 0;\n\n                            const retryAfter = response.headers[\"retry-after\"];\n                            if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                stall = parseInt(retryAfter) * 1000;\n                            } else {\n                                stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            }\n\n                            //console.log(\"Stalling 429\");\n                            await staller(stall);\n                            continue;\n                        }\n                    }\n                }\n\n            } catch (error) {\n                response = (<any>error).response;\n                if (response == null) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        serverError: error,\n                        url: url\n                    });\n                }\n            }\n\n\n            let body = response.body;\n\n            if (allow304 && response.statusCode === 304) {\n                body = null;\n\n            } else if (response.statusCode < 200 || response.statusCode >= 300) {\n                runningTimeout.cancel();\n                logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                    status: response.statusCode,\n                    headers: response.headers,\n                    body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                    requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                    requestMethod: options.method,\n                    url: url\n                });\n            }\n\n            if (processFunc) {\n                try {\n                    const result = await processFunc(body, response);\n                    runningTimeout.cancel();\n                    return result;\n\n                } catch (error) {\n                    // Allow the processFunc to trigger a throttle\n                    if (error.throttleRetry && attempt < attemptLimit) {\n                        let tryAgain = true;\n                        if (throttleCallback) {\n                            tryAgain = await throttleCallback(attempt, url);\n                        }\n\n                        if (tryAgain) {\n                            const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                            //console.log(\"Stalling callback\");\n                            await staller(timeout);\n                            continue;\n                        }\n                    }\n\n                    runningTimeout.cancel();\n                    logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"]: null)),\n                        error: error,\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n            }\n\n            runningTimeout.cancel();\n\n            // If we had a processFunc, it either returned a T or threw above.\n            // The \"body\" is now a Uint8Array.\n            return <T>(<unknown>body);\n        }\n\n        return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n            requestMethod: options.method,\n            url: url\n        });\n    })();\n\n    return Promise.race([ runningTimeout.promise, runningFetch ]);\n}\n\nexport function fetchJson(connection: string | ConnectionInfo, json?: string, processFunc?: (value: any, response: FetchJsonResponse) => any): Promise<any> {\n    let processJsonFunc = (value: Uint8Array, response: FetchJsonResponse) => {\n        let result: any = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            } catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n\n        return result;\n    }\n\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body: Uint8Array = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n\n        // Create a connection with the content-type set for JSON\n        const updated: ConnectionInfo = (typeof(connection) === \"string\") ? ({ url: connection }): shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        } else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n\n    return _fetchData<any>(connection, body, processJsonFunc);\n}\n\nexport function poll<T>(func: () => Promise<T>, options?: PollOptions): Promise<T> {\n    if (!options) { options = {}; }\n    options = shallowCopy(options);\n    if (options.floor == null) { options.floor = 0; }\n    if (options.ceiling == null) { options.ceiling = 10000; }\n    if (options.interval == null) { options.interval = 250; }\n\n    return new Promise(function(resolve, reject) {\n\n        let timer: NodeJS.Timer = null;\n        let done: boolean = false;\n\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = (): boolean => {\n            if (done) { return false; }\n            done = true;\n            if (timer) { clearTimeout(timer); }\n            return true;\n        };\n\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) { reject(new Error(\"timeout\")); }\n            }, options.timeout)\n        }\n\n        const retryLimit = options.retryLimit;\n\n        let attempt = 0;\n        function check() {\n            return func().then(function(result) {\n\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) { resolve(result); }\n\n                } else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n\n                } else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n\n                // Otherwise, exponential back-off (up to 10s) our next request\n                } else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) { reject(new Error(\"retry limit reached\")); }\n                        return;\n                    }\n\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) { timeout = options.floor; }\n                    if (timeout > options.ceiling) { timeout = options.ceiling; }\n\n                    setTimeout(check, timeout);\n                }\n\n                return null;\n            }, function(error) {\n                if (cancel()) { reject(error); }\n            });\n        }\n        check();\n    });\n}\n\n","export const version = \"providers/5.5.3\";\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nconst NegativeOne: BigNumber = (/*#__PURE__*/BigNumber.from(-1));\nconst Zero: BigNumber = (/*#__PURE__*/BigNumber.from(0));\nconst One: BigNumber = (/*#__PURE__*/BigNumber.from(1));\nconst Two: BigNumber = (/*#__PURE__*/BigNumber.from(2));\nconst WeiPerEther: BigNumber = (/*#__PURE__*/BigNumber.from(\"1000000000000000000\"));\nconst MaxUint256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nconst MinInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"-0x8000000000000000000000000000000000000000000000000000000000000000\"));\nconst MaxInt256: BigNumber = (/*#__PURE__*/BigNumber.from(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"));\n\nexport {\n    NegativeOne,\n    Zero,\n    One,\n    Two,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256,\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","\"use strict\";\n\nimport { EC } from \"./elliptic\";\n\nimport { arrayify, BytesLike, hexlify, hexZeroPad, Signature, SignatureLike, splitSignature } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nlet _curve: EC = null\nfunction getCurve() {\n    if (!_curve) {\n        _curve = new EC(\"secp256k1\");\n    }\n    return _curve;\n}\n\nexport class SigningKey {\n\n    readonly curve: string;\n\n    readonly privateKey: string;\n    readonly publicKey: string;\n    readonly compressedPublicKey: string;\n\n    //readonly address: string;\n\n    readonly _isSigningKey: boolean;\n\n    constructor(privateKey: BytesLike) {\n        defineReadOnly(this, \"curve\", \"secp256k1\");\n\n        defineReadOnly(this, \"privateKey\", hexlify(privateKey));\n\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n\n        defineReadOnly(this, \"publicKey\", \"0x\" + keyPair.getPublic(false, \"hex\"));\n        defineReadOnly(this, \"compressedPublicKey\", \"0x\" + keyPair.getPublic(true, \"hex\"));\n\n        defineReadOnly(this, \"_isSigningKey\", true);\n    }\n\n    _addPoint(other: BytesLike): string {\n        const p0 =  getCurve().keyFromPublic(arrayify(this.publicKey));\n        const p1 =  getCurve().keyFromPublic(arrayify(other));\n        return \"0x\" + p0.pub.add(p1.pub).encodeCompressed(\"hex\");\n    }\n\n    signDigest(digest: BytesLike): Signature {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const digestBytes = arrayify(digest);\n        if (digestBytes.length !== 32) {\n            logger.throwArgumentError(\"bad digest length\", \"digest\", digest);\n        }\n        const signature = keyPair.sign(digestBytes, { canonical: true });\n        return splitSignature({\n            recoveryParam: signature.recoveryParam,\n            r: hexZeroPad(\"0x\" + signature.r.toString(16), 32),\n            s: hexZeroPad(\"0x\" + signature.s.toString(16), 32),\n        })\n    }\n\n    computeSharedSecret(otherKey: BytesLike): string {\n        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));\n        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));\n        return hexZeroPad(\"0x\" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);\n    }\n\n    static isSigningKey(value: any): value is SigningKey {\n        return !!(value && value._isSigningKey);\n    }\n}\n\nexport function recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n    const sig = splitSignature(signature);\n    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };\n    return \"0x\" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode(\"hex\", false);\n}\n\nexport function computePublicKey(key: BytesLike, compressed?: boolean): string {\n    const bytes = arrayify(key);\n\n    if (bytes.length === 32) {\n        const signingKey = new SigningKey(bytes);\n        if (compressed) {\n            return \"0x\" + getCurve().keyFromPrivate(bytes).getPublic(true, \"hex\");\n        }\n        return signingKey.publicKey;\n\n    } else if (bytes.length === 33) {\n        if (compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(false, \"hex\");\n\n    } else if (bytes.length === 65) {\n        if (!compressed) { return hexlify(bytes); }\n        return \"0x\" + getCurve().keyFromPublic(bytes).getPublic(true, \"hex\");\n    }\n\n    return logger.throwArgumentError(\"invalid public or private key\", \"key\", \"[REDACTED]\");\n}\n\n","export const version = \"signing-key/5.5.0\";\n","export const version = \"transactions/5.5.0\";\n","\"use strict\";\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, DataOptions, hexConcat, hexDataLength, hexDataSlice, hexlify, hexZeroPad, isBytesLike, SignatureLike, splitSignature, stripZeros, } from \"@ethersproject/bytes\";\nimport { Zero } from \"@ethersproject/constants\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { checkProperties } from \"@ethersproject/properties\";\nimport * as RLP from \"@ethersproject/rlp\";\nimport { computePublicKey, recoverPublicKey } from \"@ethersproject/signing-key\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type AccessList = Array<{ address: string, storageKeys: Array<string> }>;\n\n// Input allows flexibility in describing an access list\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\nexport enum TransactionTypes {\n    legacy = 0,\n    eip2930 = 1,\n    eip1559 = 2,\n};\n\nexport type UnsignedTransaction = {\n    to?: string;\n    nonce?: number;\n\n    gasLimit?: BigNumberish;\n    gasPrice?: BigNumberish;\n\n    data?: BytesLike;\n    value?: BigNumberish;\n    chainId?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessListish;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumberish;\n    maxFeePerGas?: BigNumberish;\n}\n\nexport interface Transaction {\n    hash?: string;\n\n    to?: string;\n    from?: string;\n    nonce: number;\n\n    gasLimit: BigNumber;\n    gasPrice?: BigNumber;\n\n    data: string;\n    value: BigNumber;\n    chainId: number;\n\n    r?: string;\n    s?: string;\n    v?: number;\n\n    // Typed-Transaction features\n    type?: number | null;\n\n    // EIP-2930; Type 1 & EIP-1559; Type 2\n    accessList?: AccessList;\n\n    // EIP-1559; Type 2\n    maxPriorityFeePerGas?: BigNumber;\n    maxFeePerGas?: BigNumber;\n}\n\n///////////////////////////////\n\nfunction handleAddress(value: string): string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleNumber(value: string): BigNumber {\n    if (value === \"0x\") { return Zero; }\n    return BigNumber.from(value);\n}\n\n// Legacy Transaction Fields\nconst transactionFields = [\n    { name: \"nonce\",    maxLength: 32, numeric: true },\n    { name: \"gasPrice\", maxLength: 32, numeric: true },\n    { name: \"gasLimit\", maxLength: 32, numeric: true },\n    { name: \"to\",          length: 20 },\n    { name: \"value\",    maxLength: 32, numeric: true },\n    { name: \"data\" },\n];\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, type: true, value: true\n}\n\nexport function computeAddress(key: BytesLike | string): string {\n    const publicKey = computePublicKey(key);\n    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));\n}\n\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(recoverPublicKey(arrayify(digest), signature));\n}\n\nfunction formatNumber(value: BigNumberish, name: string): Uint8Array {\n    const result = stripZeros(BigNumber.from(value).toHexString());\n    if (result.length > 32) {\n        logger.throwArgumentError(\"invalid length for \" + name, (\"transaction:\" + name), value);\n    }\n    return result;\n}\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: (storageKeys || []).map((storageKey, index) => {\n            if (hexDataLength(storageKey) !== 32) {\n                logger.throwArgumentError(\"invalid access list storageKey\", `accessList[${ addr }:${ index }]`, storageKey)\n            }\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                if (set.length > 2) {\n                    logger.throwArgumentError(\"access list expected to be [ address, storageKeys[] ]\", `value[${ index }]`, set);\n                }\n                return accessSetify(set[0], set[1])\n            }\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction _serializeEip1559(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // If there is an explicit gasPrice, make sure it matches the\n    // EIP-1559 fees; otherwise they may not understand what they\n    // think they are setting in terms of fee.\n    if (transaction.gasPrice != null) {\n        const gasPrice = BigNumber.from(transaction.gasPrice);\n        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);\n        if (!gasPrice.eq(maxFeePerGas)) {\n            logger.throwArgumentError(\"mismatch EIP-1559 gasPrice != maxFeePerGas\", \"tx\", {\n                gasPrice, maxFeePerGas\n            });\n        }\n    }\n\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(transaction.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x02\", RLP.encode(fields)]);\n}\n\nfunction _serializeEip2930(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    const fields: any = [\n        formatNumber(transaction.chainId || 0, \"chainId\"),\n        formatNumber(transaction.nonce || 0, \"nonce\"),\n        formatNumber(transaction.gasPrice || 0, \"gasPrice\"),\n        formatNumber(transaction.gasLimit || 0, \"gasLimit\"),\n        ((transaction.to != null) ? getAddress(transaction.to): \"0x\"),\n        formatNumber(transaction.value || 0, \"value\"),\n        (transaction.data || \"0x\"),\n        (formatAccessList(transaction.accessList || []))\n    ];\n\n    if (signature) {\n        const sig = splitSignature(signature);\n        fields.push(formatNumber(sig.recoveryParam, \"recoveryParam\"));\n        fields.push(stripZeros(sig.r));\n        fields.push(stripZeros(sig.s));\n    }\n\n    return hexConcat([ \"0x01\", RLP.encode(fields)]);\n}\n\n// Legacy Transactions and EIP-155\nfunction _serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    checkProperties(transaction, allowedTransactionKeys);\n\n    const raw: Array<string | Uint8Array> = [];\n\n    transactionFields.forEach(function(fieldInfo) {\n        let value = (<any>transaction)[fieldInfo.name] || ([]);\n        const options: DataOptions = { };\n        if (fieldInfo.numeric) { options.hexPad = \"left\"; }\n        value = arrayify(hexlify(value, options));\n\n        // Fixed-width field\n        if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {\n            logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value);\n        }\n\n        // Variable-width (with a maximum)\n        if (fieldInfo.maxLength) {\n            value = stripZeros(value);\n            if (value.length > fieldInfo.maxLength) {\n                logger.throwArgumentError(\"invalid length for \" + fieldInfo.name, (\"transaction:\" + fieldInfo.name), value );\n            }\n        }\n\n        raw.push(hexlify(value));\n    });\n\n    let chainId = 0;\n    if (transaction.chainId != null) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = transaction.chainId;\n\n        if (typeof(chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid transaction.chainId\", \"transaction\", transaction);\n        }\n\n    } else if (signature && !isBytesLike(signature) && signature.v > 28) {\n        // No chainId provided, but the signature is signing with EIP-155; derive chainId\n        chainId = Math.floor((signature.v - 35) / 2);\n    }\n\n    // We have an EIP-155 transaction (chainId was specified and non-zero)\n    if (chainId !== 0) {\n        raw.push(hexlify(chainId)); // @TODO: hexValue?\n        raw.push(\"0x\");\n        raw.push(\"0x\");\n    }\n\n    // Requesting an unsigned transaction\n    if (!signature) {\n        return RLP.encode(raw);\n    }\n\n    // The splitSignature will ensure the transaction has a recoveryParam in the\n    // case that the signTransaction function only adds a v.\n    const sig = splitSignature(signature);\n\n    // We pushed a chainId and null r, s on for hashing only; remove those\n    let v = 27 + sig.recoveryParam\n    if (chainId !== 0) {\n        raw.pop();\n        raw.pop();\n        raw.pop();\n        v += chainId * 2 + 8;\n\n        // If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!\n        if (sig.v > 28 && sig.v !== v) {\n             logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n        }\n    } else if (sig.v !== v) {\n         logger.throwArgumentError(\"transaction.chainId/signature.v mismatch\", \"signature\", signature);\n    }\n\n    raw.push(hexlify(v));\n    raw.push(stripZeros(arrayify(sig.r)));\n    raw.push(stripZeros(arrayify(sig.s)));\n\n    return RLP.encode(raw);\n}\n\nexport function serialize(transaction: UnsignedTransaction, signature?: SignatureLike): string {\n    // Legacy and EIP-155 Transactions\n    if (transaction.type == null || transaction.type === 0) {\n        if (transaction.accessList != null) {\n            logger.throwArgumentError(\"untyped transactions do not support accessList; include type: 1\", \"transaction\", transaction);\n        }\n        return _serialize(transaction, signature);\n    }\n\n    // Typed Transactions (EIP-2718)\n    switch (transaction.type) {\n        case 1:\n            return _serializeEip2930(transaction, signature);\n        case 2:\n            return _serializeEip1559(transaction, signature);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ transaction.type }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"serializeTransaction\",\n        transactionType: transaction.type\n    });\n}\n\nfunction _parseEipSignature(tx: Transaction, fields: Array<string>, serialize: (tx: UnsignedTransaction) => string): void {\n    try {\n        const recid = handleNumber(fields[0]).toNumber();\n        if (recid !== 0 && recid !== 1) { throw new Error(\"bad recid\"); }\n        tx.v = recid;\n    } catch (error) {\n        logger.throwArgumentError(\"invalid v for transaction type: 1\", \"v\", fields[0]);\n    }\n\n    tx.r = hexZeroPad(fields[1], 32);\n    tx.s = hexZeroPad(fields[2], 32);\n\n    try {\n        const digest = keccak256(serialize(tx));\n        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nfunction _parseEip1559(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 9 && transaction.length !== 12) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 2\", \"payload\", hexlify(payload));\n    }\n\n    const maxPriorityFeePerGas = handleNumber(transaction[2]);\n    const maxFeePerGas = handleNumber(transaction[3]);\n    const tx: Transaction = {\n        type:                  2,\n        chainId:               handleNumber(transaction[0]).toNumber(),\n        nonce:                 handleNumber(transaction[1]).toNumber(),\n        maxPriorityFeePerGas:  maxPriorityFeePerGas,\n        maxFeePerGas:          maxFeePerGas,\n        gasPrice:              null,\n        gasLimit:              handleNumber(transaction[4]),\n        to:                    handleAddress(transaction[5]),\n        value:                 handleNumber(transaction[6]),\n        data:                  transaction[7],\n        accessList:            accessListify(transaction[8]),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (transaction.length === 9) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);\n\n    return tx;\n}\n\nfunction _parseEip2930(payload: Uint8Array): Transaction {\n    const transaction = RLP.decode(payload.slice(1));\n\n    if (transaction.length !== 8 && transaction.length !== 11) {\n        logger.throwArgumentError(\"invalid component count for transaction type: 1\", \"payload\", hexlify(payload));\n    }\n\n    const tx: Transaction = {\n        type:       1,\n        chainId:    handleNumber(transaction[0]).toNumber(),\n        nonce:      handleNumber(transaction[1]).toNumber(),\n        gasPrice:   handleNumber(transaction[2]),\n        gasLimit:   handleNumber(transaction[3]),\n        to:         handleAddress(transaction[4]),\n        value:      handleNumber(transaction[5]),\n        data:       transaction[6],\n        accessList: accessListify(transaction[7])\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (transaction.length === 8) { return tx; }\n\n    tx.hash = keccak256(payload);\n\n    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);\n\n    return tx;\n}\n\n// Legacy Transactions and EIP-155\nfunction _parse(rawTransaction: Uint8Array): Transaction {\n    const transaction = RLP.decode(rawTransaction);\n\n    if (transaction.length !== 9 && transaction.length !== 6) {\n        logger.throwArgumentError(\"invalid raw transaction\", \"rawTransaction\", rawTransaction);\n    }\n\n    const tx: Transaction = {\n        nonce:    handleNumber(transaction[0]).toNumber(),\n        gasPrice: handleNumber(transaction[1]),\n        gasLimit: handleNumber(transaction[2]),\n        to:       handleAddress(transaction[3]),\n        value:    handleNumber(transaction[4]),\n        data:     transaction[5],\n        chainId:  0\n    };\n\n    // Legacy unsigned transaction\n    if (transaction.length === 6) { return tx; }\n\n    try {\n        tx.v = BigNumber.from(transaction[6]).toNumber();\n\n    } catch (error) {\n        console.log(error);\n        return tx;\n    }\n\n    tx.r = hexZeroPad(transaction[7], 32);\n    tx.s = hexZeroPad(transaction[8], 32);\n\n    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {\n        // EIP-155 unsigned transaction\n        tx.chainId = tx.v;\n        tx.v = 0;\n\n    } else {\n        // Signed Transaction\n\n        tx.chainId = Math.floor((tx.v - 35) / 2);\n        if (tx.chainId < 0) { tx.chainId = 0; }\n\n        let recoveryParam = tx.v - 27;\n\n        const raw = transaction.slice(0, 6);\n\n        if (tx.chainId !== 0) {\n            raw.push(hexlify(tx.chainId));\n            raw.push(\"0x\");\n            raw.push(\"0x\");\n            recoveryParam -= tx.chainId * 2 + 8;\n        }\n\n        const digest = keccak256(RLP.encode(raw));\n        try {\n            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });\n        } catch (error) {\n            console.log(error);\n        }\n\n        tx.hash = keccak256(rawTransaction);\n    }\n\n    tx.type = null;\n\n    return tx;\n}\n\n\nexport function parse(rawTransaction: BytesLike): Transaction {\n    const payload = arrayify(rawTransaction);\n\n    // Legacy and EIP-155 Transactions\n    if (payload[0] > 0x7f) { return _parse(payload); }\n\n    // Typed Transaction (EIP-2718)\n    switch (payload[0]) {\n        case 1:\n            return _parseEip2930(payload);\n        case 2:\n            return _parseEip1559(payload);\n        default:\n            break;\n    }\n\n    return logger.throwError(`unsupported transaction type: ${ payload[0] }`, Logger.errors.UNSUPPORTED_OPERATION, {\n        operation: \"parseTransaction\",\n        transactionType: payload[0]\n    });\n}\n\n","\"use strict\";\n\nimport { Block, TransactionReceipt, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { AccessList, accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport type FormatFunc = (value: any) => any;\n\nexport type FormatFuncs = { [ key: string ]: FormatFunc };\n\nexport type Formats = {\n    transaction: FormatFuncs,\n    transactionRequest: FormatFuncs,\n    receipt: FormatFuncs,\n    receiptLog: FormatFuncs,\n    block: FormatFuncs,\n    blockWithTransactions: FormatFuncs,\n    filter: FormatFuncs,\n    filterLog: FormatFuncs,\n};\n\nexport class Formatter {\n    readonly formats: Formats;\n\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n\n    getDefaultFormats(): Formats {\n        const formats: Formats = <Formats>({ });\n\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n\n        const strictData = (v: any) => { return this.data(v, true); };\n\n        formats.transaction = {\n            hash: hash,\n\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n\n            confirmations: Formatter.allowNull(number, null),\n\n            from: address,\n\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n\n            creates: Formatter.allowNull(address, null),\n\n            raw: Formatter.allowNull(data),\n        };\n\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),// @TODO: should this be data?\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n\n        formats.block = {\n            hash: hash,\n            parentHash: hash,\n            number: number,\n\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n\n            miner: address,\n            extraData: data,\n\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n\n            topics: Formatter.arrayOf(hash),\n\n            transactionHash: hash,\n            logIndex: number,\n        };\n\n        return formats;\n    }\n\n    accessList(accessList: Array<any>): AccessList {\n        return accessListify(accessList || []);\n    }\n\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number: any): number {\n        if (number === \"0x\") { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    type(number: any): number {\n        if (number === \"0x\" || number == null) { return 0; }\n        return BigNumber.from(number).toNumber();\n    }\n\n    // Strict! Used on input.\n    bigNumber(value: any): BigNumber {\n        return BigNumber.from(value);\n    }\n\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value: any): boolean {\n        if (typeof(value) === \"boolean\") { return value; }\n        if (typeof(value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") { return true; }\n            if (value === \"false\") { return false; }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n\n    hex(value: any, strict?: boolean): string {\n        if (typeof(value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n            if (isHexString(value)) {\n               return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n\n    data(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n\n    // Requires an address\n    // Strict! Used on input.\n    address(value: any): string {\n        return getAddress(value);\n    }\n\n    callAddress(value: any): string {\n        if (!isHexString(value, 32)) { return null; }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null: address;\n    }\n\n    contractAddress(value: any): string {\n        return getContractAddress(value);\n    }\n\n    // Strict! Used on input.\n    blockTag(blockTag: any): string {\n        if (blockTag == null) { return \"latest\"; }\n\n        if (blockTag === \"earliest\") { return \"0x0\"; }\n\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n\n        if (typeof(blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(<number | string>blockTag);\n        }\n\n        throw new Error(\"invalid blockTag\");\n    }\n\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value: any, strict?: boolean): string {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value: any): number {\n        if (value == null) { return null; }\n\n        const v = BigNumber.from(value);\n\n        try {\n            return v.toNumber();\n        } catch (error) { }\n\n       return null;\n    }\n\n    uint256(value: any): string {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n\n    _block(value: any, format: any): Block {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty: value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null: BigNumber.from(difficulty));\n        return result;\n    }\n\n    block(value: any): Block {\n        return this._block(value, this.formats.block);\n    }\n\n    blockWithTransactions(value: any): Block {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n\n    // Strict! Used on input.\n    transactionRequest(value: any): any {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n\n    transactionResponse(transaction: any): TransactionResponse {\n\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n\n        if ((transaction.type === 1 || transaction.type === 2)&& transaction.accessList == null) {\n            transaction.accessList = [ ];\n        }\n\n        const result: TransactionResponse = Formatter.check(this.formats.transaction, transaction);\n\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            result.chainId = chainId;\n\n        } else {\n            let chainId = transaction.networkId;\n\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n\n            if (typeof(chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) { chainId = 0; }\n                chainId = parseInt(chainId);\n            }\n\n            if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n            result.chainId = chainId;\n        }\n\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n\n        return result;\n    }\n\n    transaction(value: any): any {\n        return parseTransaction(value);\n    }\n\n    receiptLog(value: any): any {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n\n    receipt(value: any): TransactionReceipt {\n        const result: TransactionReceipt = Formatter.check(this.formats.receipt, value);\n\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                } else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            } else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n\n        return result;\n    }\n\n    topics(value: any): any {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n\n        } else if (value != null) {\n            return this.hash(value, true);\n        }\n\n        return null;\n    }\n\n    filter(value: any): any {\n        return Formatter.check(this.formats.filter, value);\n    }\n\n    filterLog(value: any): any {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n\n    static check(format: { [ name: string ]: FormatFunc }, object: any): any {\n        const result: any = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) { result[key] = value; }\n            } catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n\n    // if value is null-ish, nullValue is returned\n    static allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n        return (function(value: any) {\n            if (value == null) { return nullValue; }\n            return format(value);\n        });\n    }\n\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format: FormatFunc, replaceValue: any): FormatFunc {\n        return (function(value: any) {\n            if (!value) { return replaceValue; }\n            return format(value);\n        });\n    }\n\n    // Requires an Array satisfying check\n    static arrayOf(format: FormatFunc): FormatFunc {\n        return (function(array: any): Array<any> {\n            if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n\n            const result: any = [];\n\n            array.forEach(function(value) {\n                result.push(format(value));\n            });\n\n            return result;\n        });\n    }\n}\n\nexport interface CommunityResourcable {\n    isCommunityResource(): boolean;\n}\n\nexport function isCommunityResourcable(value: any): value is CommunityResourcable {\n    return (value && typeof(value.isCommunityResource) === \"function\");\n}\n\nexport function isCommunityResource(value: any): boolean {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) { return; }\n    throttleMessage = true;\n\n    console.log(\"========= NOTICE =========\")\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n\n","\"use strict\";\n\nimport {\n    Block, BlockTag, BlockWithTransactions, EventType, Filter, FilterByBlockHash, ForkEvent,\n    Listener, Log, Provider, TransactionReceipt, TransactionRequest, TransactionResponse\n} from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { namehash } from \"@ethersproject/hash\";\nimport { getNetwork, Network, Networkish } from \"@ethersproject/networks\";\nimport { Deferrable, defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\n\nimport bech32 from \"bech32\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { Formatter } from \"./formatter\";\n\n//////////////////////////////\n// Event Serializeing\n\nfunction checkTopic(topic: string): string {\n     if (topic == null) { return \"null\"; }\n     if (hexDataLength(topic) !== 32) {\n         logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n     }\n     return topic.toLowerCase();\n}\n\nfunction serializeTopics(topics: Array<string | Array<string>>): string {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) { topics.pop(); }\n\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n\n            // Only track unique OR-topics\n            const unique: { [ topic: string ]: boolean } = { }\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n\n            return sorted.join(\"|\");\n\n        } else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\n\nfunction deserializeTopics(data: string): Array<string | Array<string>> {\n    if (data === \"\") { return [ ]; }\n\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") { return [ ]; }\n\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null: topic);\n        });\n\n        return ((comps.length === 1) ? comps[0]: comps);\n    });\n}\n\nfunction getEventTag(eventName: EventType): string {\n    if (typeof(eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n\n    } else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n\n    } else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n\n    } else if (eventName && typeof(eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n\n    throw new Error(\"invalid event - \" + eventName);\n}\n\n//////////////////////////////\n// Helper Object\n\nfunction getTime() {\n    return (new Date()).getTime();\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n\n//////////////////////////////\n// Provider Object\n\n\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\n\nconst PollableEvents = [ \"block\", \"network\", \"pending\", \"poll\" ];\n\nexport class Event {\n    readonly listener: Listener;\n    readonly once: boolean;\n    readonly tag: string;\n\n    constructor(tag: string, listener: Listener, once: boolean) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n    }\n\n    get event(): EventType {\n        switch (this.type) {\n            case \"tx\":\n               return this.hash;\n            case \"filter\":\n               return this.filter;\n        }\n        return this.tag;\n    }\n\n    get type(): string {\n        return this.tag.split(\":\")[0]\n    }\n\n    get hash(): string {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") { return null; }\n        return comps[1];\n    }\n\n    get filter(): Filter {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") { return null; }\n        const address = comps[1];\n\n        const topics = deserializeTopics(comps[2]);\n        const filter: Filter = { };\n\n        if (topics.length > 0) { filter.topics = topics; }\n        if (address && address !== \"*\") { filter.address = address; }\n\n        return filter;\n    }\n\n    pollable(): boolean {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n\nexport interface EnsResolver {\n\n    // Name this Resolver is associated with\n    readonly name: string;\n\n    // The address of the resolver\n    readonly address: string;\n\n    // Multichain address resolution (also normal address resolution)\n    // See: https://eips.ethereum.org/EIPS/eip-2304\n    getAddress(coinType?: 60): Promise<null | string>\n\n    // Contenthash field\n    // See: https://eips.ethereum.org/EIPS/eip-1577\n    getContentHash(): Promise<null | string>;\n\n    // Storage of text records\n    // See: https://eips.ethereum.org/EIPS/eip-634\n    getText(key: string): Promise<null | string>;\n};\n\nexport interface EnsProvider {\n    resolveName(name: string): Promise<null | string>;\n    lookupAddress(address: string): Promise<null | string>;\n    getResolver(name: string): Promise<null | EnsResolver>;\n}\n\ntype CoinInfo = {\n    symbol: string,\n    ilk?: string,     // General family\n    prefix?: string,  // Bech32 prefix\n    p2pkh?: number,   // Pay-to-Public-Key-Hash Version\n    p2sh?: number,    // Pay-to-Script-Hash Version\n};\n\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos: { [ coinType: string ]: CoinInfo } = {\n    \"0\":   { symbol: \"btc\",  p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\":   { symbol: \"ltc\",  p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\":   { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\":  { symbol: \"eth\",  ilk: \"eth\" },\n    \"61\":  { symbol: \"etc\",  ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\n\nfunction bytes32ify(value: number): string {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data: Uint8Array): string {\n    return Base58.encode(concat([ data, hexDataSlice(sha256(sha256(data)), 0, 4) ]));\n}\n\nexport interface Avatar {\n    url: string;\n    linkage: Array<{ type: string, content: string }>;\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\nfunction _parseString(result: string): null | string {\n    try {\n        return toUtf8String(_parseBytes(result));\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string): null | string {\n    if (result === \"0x\") { return null; }\n\n    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\nexport class Resolver implements EnsResolver {\n    readonly provider: BaseProvider;\n\n    readonly name: string;\n    readonly address: string;\n\n    readonly _resolvedAddress: null | string;\n\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider: BaseProvider, address: string, name: string, resolvedAddress?: string) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n\n    async _fetchBytes(selector: string, parameters?: string): Promise<null | string> {\n        // e.g. keccak256(\"addr(bytes32,uint256)\")\n        const tx = {\n            to: this.address,\n            data: hexConcat([ selector, namehash(this.name), (parameters || \"0x\") ])\n        };\n\n        try {\n            return _parseBytes(await this.provider.call(tx));\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            return null;\n        }\n    }\n\n    _getAddress(coinType: number, hexBytes: string): string {\n        const coinInfo = coinInfos[String(coinType)];\n\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${ coinType }`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`\n            });\n        }\n\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n\n        const bytes = arrayify(hexBytes);\n\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2pkh ], (\"0x\" + p2pkh[2]) ]));\n                }\n            }\n        }\n\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([ [ coinInfo.p2sh ], (\"0x\" + p2sh[2]) ]));\n                }\n            }\n        }\n\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            } else {\n                version = -1;\n            }\n\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n\n        return null;\n    }\n\n\n    async getAddress(coinType?: number): Promise<string> {\n        if (coinType == null) { coinType = 60; }\n\n        // If Ethereum, use the standard `addr(bytes32)`\n        if (coinType === 60) {\n            try {\n                // keccak256(\"addr(bytes32)\")\n                const transaction = {\n                    to: this.address,\n                    data: (\"0x3b3b57de\" + namehash(this.name).substring(2))\n                };\n                const hexBytes = await this.provider.call(transaction);\n\n                // No address\n                if (hexBytes === \"0x\" || hexBytes === HashZero) { return null; }\n\n                return this.provider.formatter.callAddress(hexBytes);\n            } catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n                throw error;\n            }\n        }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const hexBytes = await this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n\n        // No address\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // Compute the address\n        const address = this._getAddress(coinType, hexBytes);\n\n        if (address == null) {\n            logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${ coinType })`,\n                coinType: coinType,\n                data: hexBytes\n            });\n        }\n\n        return address;\n    }\n\n    async getAvatar(): Promise<null | Avatar> {\n        const linkage: Array<{ type: string, content: string }> = [ { type: \"name\", content: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) { return null; }\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                        linkage.push({ type: \"url\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"data\":\n                        linkage.push({ type: \"data\", content: avatar });\n                        return { linkage, url: avatar };\n\n                    case \"ipfs\":\n                        linkage.push({ type: \"ipfs\", content: avatar });\n                        return { linkage, url: getIpfsLink(avatar) };\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"0xc87b56dd\": \"0x0e89341c\";\n                        linkage.push({ type: scheme, content: avatar });\n\n                        // The owner of this name\n                        const owner = (this._resolvedAddress || await this.getAddress());\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) { return null; }\n\n                        const addr = await this.provider.formatter.address(comps[0]);\n                        const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            // ownerOf(uint256 tokenId)\n                            const tokenOwner = this.provider.formatter.callAddress(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x6352211e\", tokenId ])\n                            }));\n                            if (owner !== tokenOwner) { return null; }\n                            linkage.push({ type: \"owner\", content: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            // balanceOf(address owner, uint256 tokenId)\n                            const balance = BigNumber.from(await this.provider.call({\n                                to: addr, data: hexConcat([ \"0x00fdd58e\", hexZeroPad(owner, 32), tokenId ])\n                            }));\n                            if (balance.isZero()) { return null; }\n                            linkage.push({ type: \"balance\", content: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        const tx = {\n                            to: this.provider.formatter.address(comps[0]),\n                            data: hexConcat([ selector, tokenId ])\n                        };\n\n                        let metadataUrl = _parseString(await this.provider.call(tx))\n                        if (metadataUrl == null) { return null; }\n                        linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n\n                        linkage.push({ type: \"metadata-url\", content: metadataUrl });\n\n                        // Get the token metadata\n                        const metadata = await fetchJson(metadataUrl);\n                        if (!metadata) { return null; }\n                        linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") { return null; }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) { return null; }\n\n                            linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", content: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return null;\n    }\n\n    async getContentHash(): Promise<string> {\n\n        // keccak256(\"contenthash()\")\n        const hexBytes = await this._fetchBytes(\"0xbc1c58d1\");\n\n        // No contenthash\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: DAG-PB)\n        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const length = parseInt(ipfs[3], 16);\n            if (ipfs[4].length === length * 2) {\n                return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm) {\n            if (swarm[1].length === (32 * 2)) {\n                return \"bzz:/\\/\" + swarm[1]\n            }\n        }\n\n        return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"getContentHash()\",\n            data: hexBytes\n        });\n    }\n\n    async getText(key: string): Promise<string> {\n\n        // The key encoded as parameter to fetchBytes\n        let keyBytes = toUtf8Bytes(key);\n\n        // The nodehash consumes the first slot, so the string pointer targets\n        // offset 64, with the length at offset 64 and data starting at offset 96\n        keyBytes = concat([ bytes32ify(64), bytes32ify(keyBytes.length), keyBytes ]);\n\n        // Pad to word-size (32 bytes)\n        if ((keyBytes.length % 32) !== 0) {\n            keyBytes = concat([ keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32)) ])\n        }\n\n        const hexBytes = await this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n        if (hexBytes == null || hexBytes === \"0x\") { return null; }\n\n        return toUtf8String(hexBytes);\n    }\n}\n\nlet defaultFormatter: Formatter = null;\n\nlet nextPollId = 1;\n\nexport class BaseProvider extends Provider implements EnsProvider {\n    _networkPromise: Promise<Network>;\n    _network: Network;\n\n    _events: Array<Event>;\n\n    formatter: Formatter;\n\n    // To help mitigate the eventually consistent nature of the blockchain\n    // we keep a mapping of events we emit. If we emit an event X, we expect\n    // that a user should be able to query for that event in the callback,\n    // if the node returns null, we stall the response until we get back a\n    // meaningful value, since we may be hitting a re-org, or a node that\n    // has not indexed the event yet.\n    // Events:\n    //   - t:{hash}    - Transaction hash\n    //   - b:{hash}    - BlockHash\n    //   - block       - The most recent emitted block\n    _emitted: { [ eventName: string ]: number | \"pending\" };\n\n    _pollingInterval: number;\n    _poller: NodeJS.Timer;\n    _bootstrapPoll: NodeJS.Timer;\n\n    _lastBlockNumber: number;\n\n    _fastBlockNumber: number;\n    _fastBlockNumberPromise: Promise<number>;\n    _fastQueryDate: number;\n\n    _maxInternalBlockNumber: number;\n    _internalBlockNumber: Promise<{ blockNumber: number, reqTime: number, respTime: number }>;\n\n    readonly anyNetwork: boolean;\n\n\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n\n    constructor(network: Networkish | Promise<Network>) {\n        logger.checkNew(new.target, Provider);\n\n        super();\n\n        // Events being listened to\n        this._events = [];\n\n        this._emitted = { block: -2 };\n\n        this.formatter = new.target.getFormatter();\n\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) { network = this.detectNetwork(); }\n\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n\n        } else {\n            const knownNetwork = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n\n            } else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n\n        this._maxInternalBlockNumber = -1024;\n\n        this._lastBlockNumber = -2;\n\n        this._pollingInterval = 4000;\n\n        this._fastQueryDate = 0;\n    }\n\n    async _ready(): Promise<Network> {\n        if (this._network == null) {\n            let network: Network = null;\n            if (this._networkPromise) {\n                try {\n                    network = await this._networkPromise;\n                } catch (error) { }\n            }\n\n            // Try the Provider's network detection (this MUST throw if it cannot)\n            if (network == null) {\n                network = await this.detectNetwork();\n            }\n\n            // This should never happen; every Provider sub-class should have\n            // suggested a network by here (or have thrown).\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // Possible this call stacked so do not call defineReadOnly again\n            if (this._network == null) {\n                if (this.anyNetwork) {\n                    this._network = network;\n                } else {\n                    defineReadOnly(this, \"_network\", network);\n                }\n                this.emit(\"network\", network, null);\n            }\n        }\n\n        return this._network;\n    }\n\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready(): Promise<Network> {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter(): Formatter {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network: Networkish): Network {\n        return getNetwork((network == null) ? \"homestead\": network);\n    }\n\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    async _getInternalBlockNumber(maxAge: number): Promise<number> {\n        await this._ready();\n\n        // Allowing stale data up to maxAge old\n        if (maxAge > 0) {\n\n            // While there are pending internal block requests...\n            while (this._internalBlockNumber) {\n\n                // ...\"remember\" which fetch we started with\n                const internalBlockNumber = this._internalBlockNumber;\n\n                try {\n                    // Check the result is not too stale\n                    const result = await internalBlockNumber;\n                    if ((getTime() - result.respTime) <= maxAge) {\n                        return result.blockNumber;\n                    }\n\n                    // Too old; fetch a new value\n                    break;\n\n                } catch(error) {\n\n                    // The fetch rejected; if we are the first to get the\n                    // rejection, drop through so we replace it with a new\n                    // fetch; all others blocked will then get that fetch\n                    // which won't match the one they \"remembered\" and loop\n                    if (this._internalBlockNumber === internalBlockNumber) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        const reqTime = getTime();\n\n        const checkInternalBlockNumber = resolveProperties({\n            blockNumber: this.perform(\"getBlockNumber\", { }),\n            networkError: this.getNetwork().then((network) => (null), (error) => (error))\n        }).then(({ blockNumber, networkError }) => {\n            if (networkError) {\n                // Unremember this bad internal block number\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n                throw networkError;\n            }\n\n            const respTime = getTime();\n\n            blockNumber = BigNumber.from(blockNumber).toNumber();\n            if (blockNumber < this._maxInternalBlockNumber) { blockNumber = this._maxInternalBlockNumber; }\n\n            this._maxInternalBlockNumber = blockNumber;\n            this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n            return { blockNumber, reqTime, respTime };\n        });\n\n        this._internalBlockNumber = checkInternalBlockNumber;\n\n        // Swallow unhandled exceptions; if needed they are handled else where\n        checkInternalBlockNumber.catch((error) => {\n            // Don't null the dead (rejected) fetch, if it has already been updated\n            if (this._internalBlockNumber === checkInternalBlockNumber) {\n                this._internalBlockNumber = null;\n            }\n        });\n\n        return (await checkInternalBlockNumber).blockNumber;\n    }\n\n    async poll(): Promise<void> {\n        const pollId = nextPollId++;\n\n        // Track all running promises, so we can trigger a post-poll once they are complete\n        const runners: Array<Promise<void>> = [];\n\n        let blockNumber: number = null;\n        try {\n            blockNumber = await this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n        } catch (error) {\n            this.emit(\"error\", error);\n            return;\n        }\n        this._setFastBlockNumber(blockNumber);\n\n        // Emit a poll event after we have the latest (fast) block number\n        this.emit(\"poll\", pollId, blockNumber);\n\n        // If the block has not changed, meh.\n        if (blockNumber === this._lastBlockNumber) {\n            this.emit(\"didPoll\", pollId);\n            return;\n        }\n\n        // First polling cycle, trigger a \"block\" events\n        if (this._emitted.block === -2) {\n            this._emitted.block = blockNumber - 1;\n        }\n\n        if (Math.abs((<number>(this._emitted.block)) - blockNumber) > 1000) {\n            logger.warn(`network block skew detected; skipping block events (emitted=${ this._emitted.block } blockNumber${ blockNumber })`);\n            this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                blockNumber: blockNumber,\n                event: \"blockSkew\",\n                previousBlockNumber: this._emitted.block\n            }));\n            this.emit(\"block\", blockNumber);\n\n        } else {\n            // Notify all listener for each block that has passed\n            for (let i = (<number>this._emitted.block) + 1; i <= blockNumber; i++) {\n                this.emit(\"block\", i);\n            }\n        }\n\n        // The emitted block was updated, check for obsolete events\n        if ((<number>this._emitted.block) !== blockNumber) {\n            this._emitted.block = blockNumber;\n\n            Object.keys(this._emitted).forEach((key) => {\n                // The block event does not expire\n                if (key === \"block\") { return; }\n\n                // The block we were at when we emitted this event\n                const eventBlockNumber = this._emitted[key];\n\n                // We cannot garbage collect pending transactions or blocks here\n                // They should be garbage collected by the Provider when setting\n                // \"pending\" events\n                if (eventBlockNumber === \"pending\") { return; }\n\n                // Evict any transaction hashes or block hashes over 12 blocks\n                // old, since they should not return null anyways\n                if (blockNumber - eventBlockNumber > 12) {\n                    delete this._emitted[key];\n                }\n            });\n        }\n\n        // First polling cycle\n        if (this._lastBlockNumber === -2) {\n            this._lastBlockNumber = blockNumber - 1;\n        }\n\n        // Find all transaction hashes we are waiting on\n        this._events.forEach((event) => {\n            switch (event.type) {\n                case \"tx\": {\n                    const hash = event.hash;\n                    let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt || receipt.blockNumber == null) { return null; }\n                        this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                        this.emit(hash, receipt);\n                        return null;\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n\n                    runners.push(runner);\n\n                    break;\n                }\n\n                case \"filter\": {\n                    const filter = event.filter;\n                    filter.fromBlock = this._lastBlockNumber + 1;\n                    filter.toBlock = blockNumber;\n\n                    const runner = this.getLogs(filter).then((logs) => {\n                        if (logs.length === 0) { return; }\n                        logs.forEach((log: Log) => {\n                            this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                            this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                            this.emit(filter, log);\n                        });\n                    }).catch((error: Error) => { this.emit(\"error\", error); });\n                    runners.push(runner);\n\n                    break;\n                }\n            }\n        });\n\n        this._lastBlockNumber = blockNumber;\n\n        // Once all events for this loop have been processed, emit \"didPoll\"\n        Promise.all(runners).then(() => {\n            this.emit(\"didPoll\", pollId);\n        }).catch((error) => { this.emit(\"error\", error); });\n\n        return;\n    }\n\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber: number): void {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) { this.poll(); }\n    }\n\n    get network(): Network {\n        return this._network;\n    }\n\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    async detectNetwork(): Promise<Network> {\n        return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"provider.detectNetwork\"\n        });\n    }\n\n    async getNetwork(): Promise<Network> {\n        const network = await this._ready();\n\n        // Make sure we are still connected to the same network; this is\n        // only an external call for backends which can have the underlying\n        // network change spontaneously\n        const currentNetwork = await this.detectNetwork();\n        if (network.chainId !== currentNetwork.chainId) {\n\n            // We are allowing network changes, things can get complex fast;\n            // make sure you know what you are doing if you use \"any\"\n            if (this.anyNetwork) {\n                this._network = currentNetwork;\n\n                // Reset all internal block number guards and caches\n                this._lastBlockNumber = -2;\n                this._fastBlockNumber = null;\n                this._fastBlockNumberPromise = null;\n                this._fastQueryDate = 0;\n                this._emitted.block = -2;\n                this._maxInternalBlockNumber = -1024;\n                this._internalBlockNumber = null;\n\n                // The \"network\" event MUST happen before this method resolves\n                // so any events have a chance to unregister, so we stall an\n                // additional event loop before returning from /this/ call\n                this.emit(\"network\", currentNetwork, network);\n                await stall(0);\n\n                return this._network;\n            }\n\n            const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                event: \"changed\",\n                network: network,\n                detectedNetwork: currentNetwork\n            });\n\n            this.emit(\"error\", error);\n            throw error;\n        }\n\n        return network;\n    }\n\n    get blockNumber(): number {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber: -1;\n    }\n\n    get polling(): boolean {\n        return (this._poller != null);\n    }\n\n    set polling(value: boolean) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) { this.poll(); }\n\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n\n        } else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n\n    get pollingInterval(): number {\n        return this._pollingInterval;\n    }\n\n    set pollingInterval(value: number) {\n        if (typeof(value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n\n        this._pollingInterval = value;\n\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n\n    _getFastBlockNumber(): Promise<number> {\n        const now = getTime();\n\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n\n        return this._fastBlockNumberPromise;\n    }\n\n    _setFastBlockNumber(blockNumber: number): void {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) { return; }\n\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n\n    async waitForTransaction(transactionHash: string, confirmations?: number, timeout?: number): Promise<TransactionReceipt> {\n        return this._waitForTransaction(transactionHash, (confirmations == null) ? 1: confirmations, timeout || 0, null);\n    }\n\n    async _waitForTransaction(transactionHash: string, confirmations: number, timeout: number, replaceable: { data: string, from: string, nonce: number, to: string, value: BigNumber, startBlock: number }): Promise<TransactionReceipt> {\n        const receipt = await this.getTransactionReceipt(transactionHash);\n\n        // Receipt is already good\n        if ((receipt ? receipt.confirmations: 0) >= confirmations) { return receipt; }\n\n        // Poll until the receipt is good...\n        return new Promise((resolve, reject) => {\n            const cancelFuncs: Array<() => void> = [];\n\n            let done = false;\n            const alreadyDone = function() {\n                if (done) { return true; }\n                done = true;\n                cancelFuncs.forEach((func) => { func(); });\n                return false;\n            };\n\n            const minedHandler = (receipt: TransactionReceipt) => {\n                if (receipt.confirmations < confirmations) { return; }\n                if (alreadyDone()) { return; }\n                resolve(receipt);\n            }\n            this.on(transactionHash, minedHandler);\n            cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n\n            if (replaceable) {\n                let lastBlockNumber = replaceable.startBlock;\n                let scannedBlock: number = null;\n                const replaceHandler = async (blockNumber: number) => {\n                    if (done) { return; }\n\n                    // Wait 1 second; this is only used in the case of a fault, so\n                    // we will trade off a little bit of latency for more consistent\n                    // results and fewer JSON-RPC calls\n                    await stall(1000);\n\n                    this.getTransactionCount(replaceable.from).then(async (nonce) => {\n                        if (done) { return; }\n\n                        if (nonce <= replaceable.nonce) {\n                            lastBlockNumber = blockNumber;\n\n                        } else {\n                            // First check if the transaction was mined\n                            {\n                                const mined = await this.getTransaction(transactionHash);\n                                if (mined && mined.blockNumber != null) { return; }\n                            }\n\n                            // First time scanning. We start a little earlier for some\n                            // wiggle room here to handle the eventually consistent nature\n                            // of blockchain (e.g. the getTransactionCount was for a\n                            // different block)\n                            if (scannedBlock == null) {\n                                scannedBlock = lastBlockNumber - 3;\n                                if (scannedBlock < replaceable.startBlock) {\n                                    scannedBlock = replaceable.startBlock;\n                                }\n                            }\n\n                            while (scannedBlock <= blockNumber) {\n                                if (done) { return; }\n\n                                const block = await this.getBlockWithTransactions(scannedBlock);\n                                for (let ti = 0; ti < block.transactions.length; ti++) {\n                                    const tx = block.transactions[ti];\n\n                                    // Successfully mined!\n                                    if (tx.hash === transactionHash) { return; }\n\n                                    // Matches our transaction from and nonce; its a replacement\n                                    if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                        if (done) { return; }\n\n                                        // Get the receipt of the replacement\n                                        const receipt = await this.waitForTransaction(tx.hash, confirmations);\n\n                                        // Already resolved or rejected (prolly a timeout)\n                                        if (alreadyDone()) { return; }\n\n                                        // The reason we were replaced\n                                        let reason = \"replaced\";\n                                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                            reason = \"repriced\";\n                                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                            reason = \"cancelled\"\n                                        }\n\n                                        // Explain why we were replaced\n                                        reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                            reason,\n                                            replacement: this._wrapTransaction(tx),\n                                            hash: transactionHash,\n                                            receipt\n                                        }));\n\n                                        return;\n                                    }\n                                }\n                                scannedBlock++;\n                            }\n                        }\n\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n\n                    }, (error) => {\n                        if (done) { return; }\n                        this.once(\"block\", replaceHandler);\n                    });\n                };\n\n                if (done) { return; }\n                this.once(\"block\", replaceHandler);\n\n                cancelFuncs.push(() => {\n                    this.removeListener(\"block\", replaceHandler);\n                });\n            }\n\n            if (typeof(timeout) === \"number\" && timeout > 0) {\n                const timer = setTimeout(() => {\n                    if (alreadyDone()) { return; }\n                    reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                }, timeout);\n                if (timer.unref) { timer.unref(); }\n\n                cancelFuncs.push(() => { clearTimeout(timer); });\n            }\n        });\n    }\n\n    async getBlockNumber(): Promise<number> {\n        return this._getInternalBlockNumber(0);\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        await this.getNetwork();\n\n        const result = await this.perform(\"getGasPrice\", { });\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getGasPrice\",\n                result, error\n            });\n        }\n    }\n\n    async getBalance(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getBalance\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getBalance\",\n                params, result, error\n            });\n        }\n    }\n\n    async getTransactionCount(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<number> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getTransactionCount\", params);\n        try {\n            return BigNumber.from(result).toNumber();\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getTransactionCount\",\n                params, result, error\n            });\n        }\n    }\n\n    async getCode(addressOrName: string | Promise<string>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"getCode\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getCode\",\n                params, result, error\n            });\n        }\n    }\n\n    async getStorageAt(addressOrName: string | Promise<string>, position: BigNumberish | Promise<BigNumberish>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            address: this._getAddress(addressOrName),\n            blockTag: this._getBlockTag(blockTag),\n            position: Promise.resolve(position).then((p) => hexValue(p))\n        });\n        const result = await this.perform(\"getStorageAt\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"getStorageAt\",\n                params, result, error\n            });\n        }\n    }\n\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx: Transaction, hash?: string, startBlock?: number): TransactionResponse {\n        if (hash != null && hexDataLength(hash) !== 32) { throw new Error(\"invalid response - sendTransaction\"); }\n\n        const result = <TransactionResponse>tx;\n\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n\n        result.wait = async (confirms?: number, timeout?: number) => {\n            if (confirms == null) { confirms = 1; }\n            if (timeout == null) { timeout = 0; }\n\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n\n            const receipt = await this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) { return null; }\n\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        };\n\n        return result;\n    }\n\n    async sendTransaction(signedTransaction: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        const hexTx = await Promise.resolve(signedTransaction).then(t => hexlify(t));\n        const tx = this.formatter.transaction(signedTransaction);\n        if (tx.confirmations == null) { tx.confirmations = 0; }\n        const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n        try {\n            const hash = await this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n            return this._wrapTransaction(tx, hash, blockNumber);\n        } catch (error) {\n            (<any>error).transaction = tx;\n            (<any>error).transactionHash = tx.hash;\n            throw error;\n        }\n    }\n\n    async _getTransactionRequest(transaction: Deferrable<TransactionRequest>): Promise<Transaction> {\n        const values: any = await transaction;\n\n        const tx: any = { };\n\n        [\"from\", \"to\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v): null))\n        });\n\n        [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v): null));\n        });\n\n        [\"type\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v: null));\n        });\n\n        if (values.accessList) {\n            tx.accessList = this.formatter.accessList(values.accessList);\n        }\n\n        [\"data\"].forEach((key) => {\n            if (values[key] == null) { return; }\n            tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v): null));\n        });\n\n        return this.formatter.transactionRequest(await resolveProperties(tx));\n    }\n\n    async _getFilter(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Filter | FilterByBlockHash> {\n        filter = await filter;\n\n        const result: any = { };\n\n        if (filter.address != null) {\n            result.address = this._getAddress(filter.address);\n        }\n\n        [\"blockHash\", \"topics\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = (<any>filter)[key];\n        });\n\n        [\"fromBlock\", \"toBlock\"].forEach((key) => {\n            if ((<any>filter)[key] == null) { return; }\n            result[key] = this._getBlockTag((<any>filter)[key]);\n        });\n\n        return this.formatter.filter(await resolveProperties(result));\n    }\n\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag | Promise<BlockTag>): Promise<string> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction),\n            blockTag: this._getBlockTag(blockTag)\n        });\n\n        const result = await this.perform(\"call\", params);\n        try {\n            return hexlify(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"call\",\n                params, result, error\n            });\n        }\n    }\n\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        await this.getNetwork();\n        const params = await resolveProperties({\n            transaction: this._getTransactionRequest(transaction)\n        });\n\n        const result = await this.perform(\"estimateGas\", params);\n        try {\n            return BigNumber.from(result);\n        } catch (error) {\n            return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                method: \"estimateGas\",\n                params, result, error\n            });\n        }\n    }\n\n    async _getAddress(addressOrName: string | Promise<string>): Promise<string> {\n        addressOrName = await addressOrName;\n        if (typeof(addressOrName) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n        }\n\n        const address = await this.resolveName(addressOrName);\n        if (address == null) {\n            logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `resolveName(${ JSON.stringify(addressOrName) })`\n            });\n        }\n        return address;\n    }\n\n    async _getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>, includeTransactions?: boolean): Promise<Block | BlockWithTransactions> {\n        await this.getNetwork();\n\n        blockHashOrBlockTag = await blockHashOrBlockTag;\n\n        // If blockTag is a number (not \"latest\", etc), this is the block number\n        let blockNumber = -128;\n\n        const params: { [key: string]: any } = {\n            includeTransactions: !!includeTransactions\n        };\n\n        if (isHexString(blockHashOrBlockTag, 32)) {\n            params.blockHash = blockHashOrBlockTag;\n        } else {\n            try {\n                params.blockTag = await this._getBlockTag(blockHashOrBlockTag);\n                if (isHexString(params.blockTag)) {\n                    blockNumber = parseInt(params.blockTag.substring(2), 16);\n                }\n            } catch (error) {\n                logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n            }\n        }\n\n        return poll(async () => {\n            const block = await this.perform(\"getBlock\", params);\n\n            // Block was not found\n            if (block == null) {\n\n                // For blockhashes, if we didn't say it existed, that blockhash may\n                // not exist. If we did see it though, perhaps from a log, we know\n                // it exists, and this node is just not caught up yet.\n                if (params.blockHash != null) {\n                    if (this._emitted[\"b:\" + params.blockHash] == null) { return null; }\n                }\n\n                // For block tags, if we are asking for a future block, we return null\n                if (params.blockTag != null) {\n                    if (blockNumber > this._emitted.block) { return null; }\n                }\n\n                // Retry on the next block\n                return undefined;\n            }\n\n            // Add transactions\n            if (includeTransactions) {\n                let blockNumber: number = null;\n                for (let i = 0; i < block.transactions.length; i++) {\n                    const tx = block.transactions[i];\n                    if (tx.blockNumber == null) {\n                        tx.confirmations = 0;\n\n                    } else if (tx.confirmations == null) {\n                        if (blockNumber == null) {\n                            blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                        }\n\n                        // Add the confirmations using the fast block number (pessimistic)\n                        let confirmations = (blockNumber - tx.blockNumber) + 1;\n                        if (confirmations <= 0) { confirmations = 1; }\n                        tx.confirmations = confirmations;\n                    }\n                }\n\n                const blockWithTxs: any = this.formatter.blockWithTransactions(block);\n                blockWithTxs.transactions = blockWithTxs.transactions.map((tx: TransactionResponse) => this._wrapTransaction(tx));\n                return blockWithTxs;\n            }\n\n            return this.formatter.block(block);\n\n        }, { oncePoll: this });\n    }\n\n    getBlock(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<Block> {\n        return <Promise<Block>>(this._getBlock(blockHashOrBlockTag, false));\n    }\n\n    getBlockWithTransactions(blockHashOrBlockTag: BlockTag | string | Promise<BlockTag | string>): Promise<BlockWithTransactions> {\n        return <Promise<BlockWithTransactions>>(this._getBlock(blockHashOrBlockTag, true));\n    }\n\n    async getTransaction(transactionHash: string | Promise<string>): Promise<TransactionResponse> {\n        await this.getNetwork();\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransaction\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            const tx = this.formatter.transactionResponse(result);\n\n            if (tx.blockNumber == null) {\n                tx.confirmations = 0;\n\n            } else if (tx.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - tx.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                tx.confirmations = confirmations;\n            }\n\n            return this._wrapTransaction(tx);\n        }, { oncePoll: this });\n    }\n\n    async getTransactionReceipt(transactionHash: string | Promise<string>): Promise<TransactionReceipt> {\n        await this.getNetwork();\n\n        transactionHash = await transactionHash;\n\n        const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n\n        return poll(async () => {\n            const result = await this.perform(\"getTransactionReceipt\", params);\n\n            if (result == null) {\n                if (this._emitted[\"t:\" + transactionHash] == null) {\n                    return null;\n                }\n                return undefined;\n            }\n\n            // \"geth-etc\" returns receipts before they are ready\n            if (result.blockHash == null) { return undefined; }\n\n            const receipt = this.formatter.receipt(result);\n\n            if (receipt.blockNumber == null) {\n                receipt.confirmations = 0;\n\n            } else if (receipt.confirmations == null) {\n                const blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n\n                // Add the confirmations using the fast block number (pessimistic)\n                let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                if (confirmations <= 0) { confirmations = 1; }\n                receipt.confirmations = confirmations;\n            }\n\n            return receipt;\n        }, { oncePoll: this });\n    }\n\n    async getLogs(filter: Filter | FilterByBlockHash | Promise<Filter | FilterByBlockHash>): Promise<Array<Log>> {\n        await this.getNetwork();\n        const params = await resolveProperties({ filter: this._getFilter(filter) });\n        const logs: Array<Log> = await this.perform(\"getLogs\", params);\n        logs.forEach((log) => {\n            if (log.removed == null) { log.removed = false; }\n        });\n        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n    }\n\n    async getEtherPrice(): Promise<number> {\n        await this.getNetwork();\n        return this.perform(\"getEtherPrice\", { });\n    }\n\n    async _getBlockTag(blockTag: BlockTag | Promise<BlockTag>): Promise<BlockTag> {\n        blockTag = await blockTag;\n\n        if (typeof(blockTag) === \"number\" && blockTag < 0) {\n            if (blockTag % 1) {\n                logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n            }\n\n            let blockNumber = await this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            blockNumber += blockTag;\n            if (blockNumber < 0) { blockNumber = 0; }\n            return this.formatter.blockTag(blockNumber)\n        }\n\n        return this.formatter.blockTag(blockTag);\n    }\n\n\n    async getResolver(name: string): Promise<null | Resolver> {\n        try {\n            const address = await this._getResolver(name);\n            if (address == null) { return null; }\n            return new Resolver(this, address, name);\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async _getResolver(name: string): Promise<string> {\n        // Get the resolver from the blockchain\n        const network = await this.getNetwork();\n\n        // No ENS...\n        if (!network.ensAddress) {\n            logger.throwError(\n                \"network does not support ENS\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { operation: \"ENS\", network: network.name }\n            );\n        }\n\n        // keccak256(\"resolver(bytes32)\")\n        const transaction = {\n            to: network.ensAddress,\n            data: (\"0x0178b8bf\" + namehash(name).substring(2))\n        };\n\n        try {\n            return this.formatter.callAddress(await this.call(transaction));\n        } catch (error) {\n            if (error.code === Logger.errors.CALL_EXCEPTION) { return null; }\n            throw error;\n        }\n    }\n\n    async resolveName(name: string | Promise<string>): Promise<null | string> {\n        name = await name;\n\n        // If it is already an address, nothing to resolve\n        try {\n            return Promise.resolve(this.formatter.address(name));\n        } catch (error) {\n            // If is is a hexstring, the address is bad (See #694)\n            if (isHexString(name)) { throw error; }\n        }\n\n        if (typeof(name) !== \"string\") {\n            logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n        }\n\n        // Get the addr from the resovler\n        const resolver = await this.getResolver(name);\n        if (!resolver) { return null; }\n\n        return await resolver.getAddress();\n    }\n\n    async lookupAddress(address: string | Promise<string>): Promise<null | string> {\n        address = await address;\n        address = this.formatter.address(address);\n\n        const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n        const resolverAddress = await this._getResolver(reverseName);\n        if (!resolverAddress) { return null; }\n\n        // keccak(\"name(bytes32)\")\n        let bytes = arrayify(await this.call({\n            to: resolverAddress,\n            data: (\"0x691f3431\" + namehash(reverseName).substring(2))\n        }));\n\n        // Strip off the dynamic string pointer (0x20)\n        if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) { return null; }\n        bytes = bytes.slice(32);\n\n        // Not a length-prefixed string\n        if (bytes.length < 32) { return null; }\n\n        // Get the length of the string (from the length-prefix)\n        const length = BigNumber.from(bytes.slice(0, 32)).toNumber();\n        bytes = bytes.slice(32);\n\n        // Length longer than available data\n        if (length > bytes.length) { return null; }\n\n        const name = toUtf8String(bytes.slice(0, length));\n\n        // Make sure the reverse record matches the foward record\n        const addr = await this.resolveName(name);\n        if (addr != address) { return null; }\n\n        return name;\n    }\n\n    async getAvatar(nameOrAddress: string): Promise<null | string> {\n        let resolver: Resolver = null;\n        if (isHexString(nameOrAddress)) {\n            // Address; reverse lookup\n            const address = this.formatter.address(nameOrAddress);\n\n            const reverseName = address.substring(2).toLowerCase() + \".addr.reverse\";\n\n            const resolverAddress = await this._getResolver(reverseName);\n            if (!resolverAddress) { return null; }\n\n            resolver = new Resolver(this, resolverAddress, \"_\", address);\n\n        } else {\n            // ENS name; forward lookup\n            resolver = await this.getResolver(nameOrAddress);\n            if (!resolver) { return null; }\n        }\n\n        const avatar = await resolver.getAvatar();\n        if (avatar == null) { return null; }\n\n        return avatar.url;\n    }\n\n    perform(method: string, params: any): Promise<any> {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n\n    _startEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _stopEvent(event: Event): void {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n\n    _addEventListener(eventName: EventType, listener: Listener, once: boolean): this {\n        const event = new Event(getEventTag(eventName), listener, once)\n        this._events.push(event);\n        this._startEvent(event);\n\n        return this;\n    }\n\n    on(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, false);\n    }\n\n    once(eventName: EventType, listener: Listener): this {\n        return this._addEventListener(eventName, listener, true);\n    }\n\n\n    emit(eventName: EventType, ...args: Array<any>): boolean {\n        let result = false;\n\n        let stopped: Array<Event> = [ ];\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) { return true; }\n\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n\n            result = true;\n\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n\n            return true;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return result;\n    }\n\n    listenerCount(eventName?: EventType): number {\n        if (!eventName) { return this._events.length; }\n\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n\n    listeners(eventName?: EventType): Array<Listener> {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n\n    off(eventName: EventType, listener?: Listener): this {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n\n        const stopped: Array<Event> = [ ];\n\n        let found = false;\n\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) { return true; }\n            if (found) { return true; }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n\n    removeAllListeners(eventName?: EventType): this {\n        let stopped: Array<Event> = [ ];\n        if (eventName == null) {\n            stopped = this._events;\n\n            this._events = [ ];\n        } else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) { return true; }\n                stopped.push(event);\n                return false;\n            });\n        }\n\n        stopped.forEach((event) => { this._stopEvent(event); });\n\n        return this;\n    }\n}\n","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}","export const version = \"abstract-signer/5.5.0\";\n","\"use strict\";\n\nimport { BlockTag, FeeData, Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { Bytes, BytesLike } from \"@ethersproject/bytes\";\nimport { Deferrable, defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst allowedTransactionKeys: Array<string> = [\n    \"accessList\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\n\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n\n// EIP-712 Typed Data\n// See: https://eips.ethereum.org/EIPS/eip-712\n\nexport interface TypedDataDomain {\n    name?: string;\n    version?: string;\n    chainId?: BigNumberish;\n    verifyingContract?: string;\n    salt?: BytesLike;\n};\n\nexport interface TypedDataField {\n    name: string;\n    type: string;\n};\n\n// Sub-classes of Signer may optionally extend this interface to indicate\n// they have a private key available synchronously\nexport interface ExternallyOwnedAccount {\n    readonly address: string;\n    readonly privateKey: string;\n}\n\n// Sub-Class Notes:\n//  - A Signer MUST always make sure, that if present, the \"from\" field\n//    matches the Signer, before sending or signing a transaction\n//  - A Signer SHOULD always wrap private information (such as a private\n//    key or mnemonic) in a function, so that console.log does not leak\n//    the data\n\n// @TODO: This is a temporary measure to preserve backwards compatibility\n//        In v6, the method on TypedDataSigner will be added to Signer\nexport interface TypedDataSigner {\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\nexport abstract class Signer {\n    readonly provider?: Provider;\n\n    ///////////////////\n    // Sub-classes MUST implement these\n\n    // Returns the checksum address\n    abstract getAddress(): Promise<string>\n\n    // Returns the signed prefixed-message. This MUST treat:\n    // - Bytes as a binary message\n    // - string as a UTF8-message\n    // i.e. \"0x1234\" is a SIX (6) byte string, NOT 2 bytes of data\n    abstract signMessage(message: Bytes | string): Promise<string>;\n\n    // Signs a transaction and returns the fully serialized, signed transaction.\n    // The EXACT transaction MUST be signed, and NO additional properties to be added.\n    // - This MAY throw if signing transactions is not supports, but if\n    //   it does, sentTransaction MUST be overridden.\n    abstract signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string>;\n\n    // Returns a new instance of the Signer, connected to provider.\n    // This MAY throw if changing providers is not supported.\n    abstract connect(provider: Provider): Signer;\n\n    readonly _isSigner: boolean;\n\n\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n\n\n    ///////////////////\n    // Sub-classes MAY override these\n\n    async getBalance(blockTag?: BlockTag): Promise<BigNumber> {\n        this._checkProvider(\"getBalance\");\n        return await this.provider.getBalance(this.getAddress(), blockTag);\n    }\n\n    async getTransactionCount(blockTag?: BlockTag): Promise<number> {\n        this._checkProvider(\"getTransactionCount\");\n        return await this.provider.getTransactionCount(this.getAddress(), blockTag);\n    }\n\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    async estimateGas(transaction: Deferrable<TransactionRequest>): Promise<BigNumber> {\n        this._checkProvider(\"estimateGas\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.estimateGas(tx);\n    }\n\n    // Populates \"from\" if unspecified, and calls with the transaction\n    async call(transaction: Deferrable<TransactionRequest>, blockTag?: BlockTag): Promise<string> {\n        this._checkProvider(\"call\");\n        const tx = await resolveProperties(this.checkTransaction(transaction));\n        return await this.provider.call(tx, blockTag);\n    }\n\n    // Populates all fields in a transaction, signs it and sends it to the network\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        this._checkProvider(\"sendTransaction\");\n        const tx = await this.populateTransaction(transaction);\n        const signedTx = await this.signTransaction(tx);\n        return await this.provider.sendTransaction(signedTx);\n    }\n\n    async getChainId(): Promise<number> {\n        this._checkProvider(\"getChainId\");\n        const network = await this.provider.getNetwork();\n        return network.chainId;\n    }\n\n    async getGasPrice(): Promise<BigNumber> {\n        this._checkProvider(\"getGasPrice\");\n        return await this.provider.getGasPrice();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        this._checkProvider(\"getFeeData\");\n        return await this.provider.getFeeData();\n    }\n\n\n    async resolveName(name: string): Promise<string> {\n        this._checkProvider(\"resolveName\");\n        return await this.provider.resolveName(name);\n    }\n\n\n\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction: Deferrable<TransactionRequest>): Deferrable<TransactionRequest> {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n\n        const tx = shallowCopy(transaction);\n\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n\n        } else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n\n        return tx;\n    }\n\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    async populateTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionRequest> {\n\n        const tx: Deferrable<TransactionRequest> = await resolveProperties(this.checkTransaction(transaction))\n\n        if (tx.to != null) {\n            tx.to = Promise.resolve(tx.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n\n            // Prevent this error from causing an UnhandledPromiseException\n            tx.to.catch((error) => {  });\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n            logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n            logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n        }\n\n        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            tx.type = 2;\n\n        } else if (tx.type === 0 || tx.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // Populate missing gasPrice\n            if (tx.gasPrice == null) { tx.gasPrice = this.getGasPrice(); }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await this.getFeeData();\n\n            if (tx.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    tx.type = 2;\n\n                    if (tx.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = tx.gasPrice;\n                        delete tx.gasPrice;\n                        tx.maxFeePerGas = gasPrice;\n                        tx.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n                        if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                        if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    if (hasEip1559) {\n                        logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"populateTransaction\"\n                        });\n                    }\n\n                    // Populate missing fee data\n                    if (tx.gasPrice == null) { tx.gasPrice = feeData.gasPrice; }\n\n                    // Explicitly set untyped transaction to legacy\n                    tx.type = 0;\n\n                } else {\n                    // getFeeData has failed us.\n                    logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"signer.getFeeData\"\n                    });\n                }\n\n            } else if (tx.type === 2) {\n                // Explicitly using EIP-1559\n\n                // Populate missing fee data\n                if (tx.maxFeePerGas == null) { tx.maxFeePerGas = feeData.maxFeePerGas; }\n                if (tx.maxPriorityFeePerGas == null) { tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas; }\n            }\n        }\n\n        if (tx.nonce == null) { tx.nonce = this.getTransactionCount(\"pending\"); }\n\n        if (tx.gasLimit == null) {\n            tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                if (forwardErrors.indexOf(error.code) >= 0) {\n                    throw error;\n                }\n\n                return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                    error: error,\n                    tx: tx\n                });\n            });\n        }\n\n        if (tx.chainId == null) {\n            tx.chainId = this.getChainId();\n        } else {\n            tx.chainId = Promise.all([\n                Promise.resolve(tx.chainId),\n                this.getChainId()\n            ]).then((results) => {\n                if (results[1] !== 0 && results[0] !== results[1]) {\n                    logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                }\n                return results[0];\n            });\n        }\n\n        return await resolveProperties(tx);\n    }\n\n\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n\n    _checkProvider(operation?: string): void {\n        if (!this.provider) { logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: (operation || \"_checkProvider\") });\n        }\n    }\n\n    static isSigner(value: any): value is Signer {\n        return !!(value && value._isSigner);\n    }\n}\n\nexport class VoidSigner extends Signer implements TypedDataSigner {\n    readonly address: string;\n\n    constructor(address: string, provider?: Provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n\n    getAddress(): Promise<string> {\n        return Promise.resolve(this.address);\n    }\n\n    _fail(message: string, operation: string): Promise<any> {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n\n    signMessage(message: Bytes | string): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n\n    _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n\n    connect(provider: Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n}\n\n","import { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\n\nexport function id(text: string): string {\n    return keccak256(toUtf8Bytes(text));\n}\n","import { TypedDataDomain, TypedDataField } from \"@ethersproject/abstract-signer\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { arrayify, BytesLike, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { id } from \"./id\";\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst NegativeOne: BigNumber = BigNumber.from(-1);\nconst Zero: BigNumber = BigNumber.from(0);\nconst One: BigNumber = BigNumber.from(1);\nconst MaxUint256: BigNumber = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value: BytesLike) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return hexConcat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        if (typeof(value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        }\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(value: any) {\n        try {\n            return BigNumber.from(value).toString()\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) { throw new Error(\"bad length\"); }\n            return hexlify(bytes);\n        } catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n}\n\nfunction getBaseEncoder(type: string): (value: any) => string {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1): width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne): Zero;\n\n            return function(value: BigNumberish) {\n                const v = BigNumber.from(value);\n\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${ type }`, \"value\", value);\n                }\n\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n\n            return function(value: BytesLike) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${ type }`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\nexport class TypedDataEncoder {\n    readonly primaryType: string;\n    readonly types: Record<string, Array<TypedDataField>>;\n\n    readonly _encoderCache: Record<string, (value: any) => string>;\n    readonly _types: Record<string, string>;\n\n    constructor(types: Record<string, Array<TypedDataField>>) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n\n        defineReadOnly(this, \"_encoderCache\", { });\n        defineReadOnly(this, \"_types\", { });\n\n        // Link struct types to their direct child structs\n        const links: Record<string, Record<string, boolean>> = { };\n\n        // Link structs to structs which contain them as a child\n        const parents: Record<string, Array<string>> = { };\n\n        // Link all subtypes within a given struct\n        const subtypes: Record<string, Record<string, boolean>> = { };\n\n        Object.keys(types).forEach((type) => {\n            links[type] = { };\n            parents[type] = [ ];\n            subtypes[type] = { }\n        });\n\n        for (const name in types) {\n\n            const uniqueNames: Record<string, boolean> = { };\n\n            types[name].forEach((field) => {\n\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { return ;}\n\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${ JSON.stringify(baseType) }`, \"types\", types);\n                }\n\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        } else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", types);\n        }\n\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Record<string, boolean>) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${ JSON.stringify(type) }`, \"types\", types);\n            }\n\n            found[type] = true;\n\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) { return; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n\n            delete found[type];\n        }\n        checkCircular(this.primaryType, { });\n\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n\n    _getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value: Array<any>) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(hexConcat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            }\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    encodeType(name: string): string {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        }\n        return result;\n    }\n\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v: any) => this._visit(subtype, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        return logger.throwArgumentError(`unknown type: ${ type }`, \"type\", type);\n    }\n\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = shallowCopy(domain);\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        } else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof(value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n","\"use strict\";\n\n// See: https://github.com/ethereum/wiki/wiki/JSON-RPC\n\nimport { Provider, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { Signer, TypedDataDomain, TypedDataField, TypedDataSigner } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Bytes, hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { checkProperties, deepCopy, Deferrable, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { AccessList, accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson, poll } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider, Event } from \"./base-provider\";\n\n\nconst errorGas = [ \"call\", \"estimateGas\" ];\n\nfunction checkError(method: string, error: any, params: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        if (e && e.message.match(\"reverted\") && isHexString(e.data)) {\n            return e.data;\n        }\n\n        logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof(error.error.message) === \"string\") {\n        message = error.error.message;\n    } else if (typeof(error.body) === \"string\") {\n        message = error.body;\n    } else if (typeof(error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n\n    const transaction = params.transaction || params.signedTransaction;\n\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n\n    // \"nonce too low\"\n    if (message.match(/nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nfunction timer(timeout: number): Promise<any> {\n    return new Promise(function(resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\n\nfunction getResult(payload: { error?: { code?: number, data?: any, message?: string }, result?: any }): any {\n    if (payload.error) {\n        // @TODO: not any\n        const error: any = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n\n    return payload.result;\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\nconst _constructorGuard = {};\n\nexport class JsonRpcSigner extends Signer implements TypedDataSigner {\n    readonly provider: JsonRpcProvider;\n    _index: number;\n    _address: string;\n\n    constructor(constructorGuard: any, provider: JsonRpcProvider, addressOrIndex?: string | number) {\n        logger.checkNew(new.target, JsonRpcSigner);\n\n        super();\n\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n\n        defineReadOnly(this, \"provider\", provider);\n\n        if (addressOrIndex == null) { addressOrIndex = 0; }\n\n        if (typeof(addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n\n        } else if (typeof(addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n\n        } else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n\n    connect(provider: Provider): JsonRpcSigner {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n\n    connectUnchecked(): JsonRpcSigner {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n\n    getAddress(): Promise<string> {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index])\n        });\n    }\n\n    sendUncheckedTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        transaction = shallowCopy(transaction);\n\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) { address = address.toLowerCase(); }\n            return address;\n        });\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then(async (to) => {\n                if (to == null) { return null; }\n                const address = await this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            });\n        }\n\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            } else {\n                tx.from = sender;\n            }\n\n            const hexTx = (<any>this.provider.constructor).hexlifyTransaction(tx, { from: true });\n\n            return this.provider.send(\"eth_sendTransaction\", [ hexTx ]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n\n    signTransaction(transaction: Deferrable<TransactionRequest>): Promise<string> {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n\n    async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(transaction);\n\n        try {\n            // Unfortunately, JSON-RPC only provides and opaque transaction hash\n            // for a response, and we need the actual transaction, so we poll\n            // for it; it should show up very quickly\n            return await poll(async () => {\n                const tx = await this.provider.getTransaction(hash);\n                if (tx === null) { return undefined; }\n                return this.provider._wrapTransaction(tx, hash, blockNumber);\n            }, { oncePoll: this.provider });\n        } catch (error) {\n            (<any>error).transactionHash = hash;\n            throw error;\n        }\n    }\n\n    async signMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"personal_sign\", [ hexlify(data), address.toLowerCase() ]);\n    }\n\n    async _legacySignMessage(message: Bytes | string): Promise<string> {\n        const data = ((typeof(message) === \"string\") ? toUtf8Bytes(message): message);\n        const address = await this.getAddress();\n\n        // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n        return await this.provider.send(\"eth_sign\", [ address.toLowerCase(), hexlify(data) ]);\n    }\n\n    async _signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        // Populate any ENS names (in-place)\n        const populated = await _TypedDataEncoder.resolveNames(domain, types, value, (name: string) => {\n            return this.provider.resolveName(name);\n        });\n\n        const address = await this.getAddress();\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            address.toLowerCase(),\n            JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        const provider = this.provider;\n\n        const address = await this.getAddress();\n\n        return provider.send(\"personal_unlockAccount\", [ address.toLowerCase(), password, null ]);\n    }\n}\n\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return <TransactionResponse>{\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations?: number) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\n\nconst allowedTransactionKeys: { [ key: string ]: boolean } = {\n    chainId: true, data: true, gasLimit: true, gasPrice:true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n}\n\nexport class JsonRpcProvider extends BaseProvider {\n    readonly connection: ConnectionInfo;\n\n    _pendingFilter: Promise<number>;\n    _nextId: number;\n\n    // During any given event loop, the results for a given call will\n    // all be the same, so we can dedup the calls to save requests and\n    // bandwidth. @TODO: Try out generalizing this against send?\n    _eventLoopCache: Record<string, Promise<any>>;\n    get _cache(): Record<string, Promise<any>> {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = { };\n        }\n        return this._eventLoopCache;\n    }\n\n    constructor(url?: ConnectionInfo | string, network?: Networkish) {\n        logger.checkNew(new.target, JsonRpcProvider);\n\n        let networkOrReady: Networkish | Promise<Network> = network;\n\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Default URL\n        if (!url) { url = getStatic<() => string>(this.constructor, \"defaultUrl\")(); }\n\n        if (typeof(url) === \"string\") {\n            defineReadOnly(this, \"connection\",Object.freeze({\n                url: url\n            }));\n        } else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n\n        this._nextId = 42;\n    }\n\n    static defaultUrl(): string {\n        return \"http:/\\/localhost:8545\";\n    }\n\n    detectNetwork(): Promise<Network> {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n\n    async _uncachedDetectNetwork(): Promise<Network> {\n        await timer(0);\n\n        let chainId = null;\n        try {\n            chainId = await this.send(\"eth_chainId\", [ ]);\n        } catch (error) {\n            try {\n                chainId = await this.send(\"net_version\", [ ]);\n            } catch (error) { }\n        }\n\n        if (chainId != null) {\n            const getNetwork = getStatic<(network: Networkish) => Network>(this.constructor, \"getNetwork\");\n            try {\n                return getNetwork(BigNumber.from(chainId).toNumber());\n            } catch (error) {\n                return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                    chainId: chainId,\n                    event: \"invalidNetwork\",\n                    serverError: error\n                });\n            }\n        }\n\n        return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n            event: \"noNetwork\"\n        });\n    }\n\n    getSigner(addressOrIndex?: string | number): JsonRpcSigner {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n\n    getUncheckedSigner(addressOrIndex?: string | number): UncheckedJsonRpcSigner {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return this.send(\"eth_accounts\", []).then((accounts: Array<string>) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([ \"eth_chainId\", \"eth_blockNumber\" ].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n\n            return result;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n\n            throw error;\n        });\n\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n\n        return result;\n    }\n\n    prepareRequest(method: string, params: any): [ string, Array<any> ] {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [ \"eth_blockNumber\", [] ];\n\n            case \"getGasPrice\":\n                return [ \"eth_gasPrice\", [] ];\n\n            case \"getBalance\":\n                return [ \"eth_getBalance\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getTransactionCount\":\n                return [ \"eth_getTransactionCount\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getCode\":\n                return [ \"eth_getCode\", [ getLowerCase(params.address), params.blockTag ] ];\n\n            case \"getStorageAt\":\n                return [ \"eth_getStorageAt\", [ getLowerCase(params.address), params.position, params.blockTag ] ];\n\n            case \"sendTransaction\":\n                return [ \"eth_sendRawTransaction\", [ params.signedTransaction ] ]\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [ \"eth_getBlockByNumber\", [ params.blockTag, !!params.includeTransactions ] ];\n                } else if (params.blockHash) {\n                    return [ \"eth_getBlockByHash\", [ params.blockHash, !!params.includeTransactions ] ];\n                }\n                return null;\n\n            case \"getTransaction\":\n                return [ \"eth_getTransactionByHash\", [ params.transactionHash ] ];\n\n            case \"getTransactionReceipt\":\n                return [ \"eth_getTransactionReceipt\", [ params.transactionHash ] ];\n\n            case \"call\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_call\", [ hexlifyTransaction(params.transaction, { from: true }), params.blockTag ] ];\n            }\n\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic<(t: TransactionRequest, a?: { [key: string]: boolean }) => { [key: string]: string }>(this.constructor, \"hexlifyTransaction\");\n                return [ \"eth_estimateGas\", [ hexlifyTransaction(params.transaction, { from: true }) ] ];\n            }\n\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [ \"eth_getLogs\", [ params.filter ] ];\n\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (method === \"call\" || method === \"estimateGas\") {\n            const tx = params.transaction;\n            if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                // If there are no EIP-1559 properties, it might be non-EIP-a559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        params = shallowCopy(params);\n                        params.transaction = shallowCopy(tx);\n                        delete params.transaction.type;\n                    }\n                }\n            }\n        }\n\n        const args = this.prepareRequest(method,  params);\n\n        if (args == null) {\n            logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n        }\n        try {\n            return await this.send(args[0], args[1])\n        } catch (error) {\n            return checkError(method, error, params);\n        }\n    }\n\n    _startEvent(event: Event): void {\n        if (event.tag === \"pending\") { this._startPending(); }\n        super._startEvent(event);\n    }\n\n    _startPending(): void {\n        if (this._pendingFilter != null) { return; }\n        const self = this;\n\n        const pendingFilter: Promise<number> = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n\n        pendingFilter.then(function(filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [ filterId ]).then(function(hashes: Array<string>) {\n                    if (self._pendingFilter != pendingFilter) { return null; }\n\n                    let seq = Promise.resolve();\n                    hashes.forEach(function(hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function() {\n                            return self.getTransaction(hash).then(function(tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n\n                    return seq.then(function() {\n                        return timer(1000);\n                    });\n                }).then(function() {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [ filterId ]);\n                        return;\n                    }\n                    setTimeout(function() { poll(); }, 0);\n\n                    return null;\n                }).catch((error: Error) => { });\n            }\n            poll();\n\n            return filterId;\n        }).catch((error: Error) => { });\n    }\n\n    _stopEvent(event: Event): void {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction: TransactionRequest, allowExtra?: { [key: string]: boolean }): { [key: string]: string | AccessList } {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) { allowed[key] = true; }\n            }\n        }\n\n        checkProperties(transaction, allowed);\n\n        const result: { [key: string]: string | AccessList } = {};\n\n        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.\n        [\"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            const value = hexValue((<any>transaction)[key]);\n            if (key === \"gasLimit\") { key = \"gas\"; }\n            result[key] = value;\n        });\n\n        [\"from\", \"to\", \"data\"].forEach(function(key) {\n            if ((<any>transaction)[key] == null) { return; }\n            result[key] = hexlify((<any>transaction)[key]);\n        });\n\n        if ((<any>transaction).accessList) {\n            result[\"accessList\"] = accessListify((<any>transaction).accessList);\n        }\n\n        return result;\n    }\n}\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n","\"use strict\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Event } from \"./base-provider\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\n\nlet NextId = 1;\n\nexport type InflightRequest = {\n     callback: (error: Error, result: any) => void;\n     payload: string;\n};\n\nexport type Subscription = {\n    tag: string;\n    processFunc: (payload: any) => void;\n};\n\n\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\n\nexport class WebSocketProvider extends JsonRpcProvider {\n    readonly _websocket: any;\n    readonly _requests: { [ name: string ]: InflightRequest };\n    readonly _detectNetwork: Promise<Network>;\n\n    // Maps event tag to subscription ID (we dedupe identical events)\n    readonly _subIds: { [ tag: string ]: Promise<string> };\n\n    // Maps Subscription ID to Subscription\n    readonly _subs: { [ name: string ]: Subscription };\n\n    _wsReady: boolean;\n\n    constructor(url: string, network?: Networkish) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n\n        super(url, network);\n        this._pollingInterval = -1;\n\n        this._wsReady = false;\n\n        defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        defineReadOnly(this, \"_requests\", { });\n        defineReadOnly(this, \"_subs\", { });\n        defineReadOnly(this, \"_subIds\", { });\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n\n        // Stall sending requests until the socket is open...\n        this._websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this._websocket.send(this._requests[id].payload);\n            });\n        };\n\n        this._websocket.onmessage = (messageEvent: { data: string }) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n\n                } else {\n                    let error: Error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(<any>error, \"code\", result.error.code || null);\n                        defineReadOnly(<any>error, \"response\", data);\n                    } else {\n                        error = new Error(\"unknown error\");\n                    }\n\n                    request.callback(error, undefined);\n\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n\n                }\n\n            } else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result)\n                }\n\n            } else {\n                console.warn(\"this should not happen\");\n            }\n        };\n\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) { fauxPoll.unref(); }\n    }\n\n    detectNetwork(): Promise<Network> {\n        return this._detectNetwork;\n    }\n\n    get pollingInterval(): number {\n        return 0;\n    }\n\n    resetEventsBlock(blockNumber: number): void {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n\n    set pollingInterval(value: number) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n\n    async poll(): Promise<void> {\n        return null;\n    }\n\n    set polling(value: boolean) {\n        if (!value) { return; }\n\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n\n    send(method: string, params?: Array<any>): Promise<any> {\n        const rid = NextId++;\n\n        return new Promise((resolve, reject) => {\n            function callback(error: Error, result: any) {\n                if (error) { return reject(error); }\n                return resolve(result);\n            }\n\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n\n            this._requests[String(rid)] = { callback, payload };\n\n            if (this._wsReady) { this._websocket.send(payload); }\n        });\n    }\n\n    static defaultUrl(): string {\n        return \"ws:/\\/localhost:8546\";\n    }\n\n    async _subscribe(tag: string, param: Array<any>, processFunc: (result: any) => void): Promise<void> {\n        let subIdPromise = this._subIds[tag];\n        if (subIdPromise == null) {\n            subIdPromise = Promise.all(param).then((param) => {\n                return this.send(\"eth_subscribe\", param);\n            });\n            this._subIds[tag] = subIdPromise;\n        }\n        const subId = await subIdPromise;\n        this._subs[subId] = { tag, processFunc };\n    }\n\n    _startEvent(event: Event): void {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [ \"newHeads\" ], (result: any) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n\n            case \"pending\":\n                this._subscribe(\"pending\", [ \"newPendingTransactions\" ], (result: any) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n\n            case \"filter\":\n                this._subscribe(event.tag, [ \"logs\", this._getFilter(event.filter) ], (result: any) => {\n                    if (result.removed == null) { result.removed = false; }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n\n            case \"tx\": {\n                const emitReceipt = (event: Event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) { return; }\n                        this.emit(hash, receipt);\n                    });\n                };\n\n                // In case it is already mined\n                emitReceipt(event);\n\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [ \"newHeads\" ], (result: any) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n\n    _stopEvent(event: Event): void {\n        let tag = event.tag;\n\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        } else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n\n        const subId = this._subIds[tag];\n        if (!subId) { return; }\n\n       delete this._subIds[tag];\n       subId.then((subId) => {\n            if (!this._subs[subId]) { return; }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [ subId ]);\n        });\n    }\n\n    async destroy(): Promise<void> {\n        // Wait until we have connected before trying to disconnect\n        if (this._websocket.readyState === WebSocket.CONNECTING) {\n            await (new Promise((resolve) => {\n                this._websocket.onopen = function() {\n                    resolve(true);\n                };\n\n                this._websocket.onerror = function() {\n                    resolve(false);\n                };\n            }));\n        }\n\n        // Hangup\n        // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n        this._websocket.close(1000);\n    }\n}\n","\n\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { CommunityResourcable } from \"./formatter\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\n\ntype getUrlFunc = (network: Network, apiKey: string) => string | ConnectionInfo;\n\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    async detectNetwork(): Promise<Network> {\n        let network = this.network;\n        if (network == null) {\n            network = await super.detectNetwork();\n\n            if (!network) {\n                logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, { });\n            }\n\n            // If still not set, set it\n            if (this._network == null) {\n                // A static network does not support \"any\"\n                defineReadOnly(this, \"_network\", network);\n\n                this.emit(\"network\", network, null);\n            }\n        }\n        return network;\n    }\n}\n\nexport abstract class UrlJsonRpcProvider extends StaticJsonRpcProvider implements CommunityResourcable {\n    readonly apiKey: any;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n\n        // Normalize the Network and API Key\n        network = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n        apiKey = getStatic<(apiKey: string) => string>(new.target, \"getApiKey\")(apiKey);\n\n        const connection = getStatic<getUrlFunc>(new.target, \"getUrl\")(network, apiKey);\n\n        super(connection, network);\n\n        if (typeof(apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        } else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly<any, any>(this, key, apiKey[key]);\n            });\n        }\n    }\n\n    _startPending(): void {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n\n    isCommunityResource(): boolean {\n        return false;\n    }\n\n    getSigner(address?: string): JsonRpcSigner {\n        return logger.throwError(\n            \"API provider does not support signing\",\n            Logger.errors.UNSUPPORTED_OPERATION,\n            { operation: \"getSigner\" }\n        );\n    }\n\n    listAccounts(): Promise<Array<string>> {\n        return Promise.resolve([]);\n    }\n\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey: any): any {\n        return apiKey;\n    }\n\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network: Network, apiKey: any): string | ConnectionInfo {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nexport class AlchemyWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new AlchemyProvider(network, apiKey);\n\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n                                           .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): AlchemyWebSocketProvider {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey == null) { return defaultApiKey; }\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n\n    static getUrl(network: Network, apiKey: string): ConnectionInfo {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n","\"use strict\";\n\nimport { BlockTag, TransactionRequest, TransactionResponse } from \"@ethersproject/abstract-provider\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { ConnectionInfo, fetchJson } from \"@ethersproject/web\";\n\nimport { showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { BaseProvider } from \"./base-provider\";\n\n\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n    const result: Record<string, string> = { };\n    for (let key in transaction) {\n        if ((<any>transaction)[key] == null) { continue; }\n        let value = (<any>transaction)[key];\n        if (key === \"type\" && value === 0) { continue; }\n\n        // Quantity-types require no leading zero, unless 0\n        if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n            value = hexValue(hexlify(value));\n        } else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n            }).join(\",\") + \"]\";\n        } else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\n\nfunction getResult(result: { status?: number, message?: string, result?: any }): any {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n\n    if (result.status != 1 || result.message != \"OK\") {\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n\n    return result.result;\n}\n\nfunction getJsonResult(result: { jsonrpc: string, result?: any, error?: { code?: number, data?: any, message?: string} } ): any {\n    // This response indicates we are being throttled\n    if (result && (<any>result).status == 0 && (<any>result).message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error: any = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error: any = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n\n    if (result.error) {\n        // @TODO: not any\n        const error: any = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) { error.code = result.error.code; }\n        if (result.error.data) { error.data = result.error.data; }\n        throw error;\n    }\n\n    return result.result;\n}\n\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag: string): number | \"latest\" {\n    if (blockTag === \"pending\") { throw new Error(\"pending not supported\"); }\n    if (blockTag === \"latest\") { return blockTag; }\n\n    return parseInt(blockTag.substring(2), 16);\n}\n\n\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\n\nfunction checkError(method: string, error: any, transaction: any): any {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) { data = \"0x\" + data.replace(/^.*0x/i, \"\"); }\n\n            if (isHexString(data)) { return data; }\n\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof(error.error.message) === \"string\") {\n            message = error.error.message;\n        } else if (typeof(error.body) === \"string\") {\n            message = error.body;\n        } else if (typeof(error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n           error, method, transaction\n        });\n    }\n\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n         logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n         });\n    }\n\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n\n    throw error;\n}\n\nexport class EtherscanProvider extends BaseProvider{\n    readonly baseUrl: string;\n    readonly apiKey: string;\n\n    constructor(network?: Networkish, apiKey?: string) {\n        logger.checkNew(new.target, EtherscanProvider);\n\n        super(network);\n\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n\n    getBaseUrl(): string {\n        switch(this.network ? this.network.name: \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n\n    getUrl(module: string, params: Record<string, string>): string {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${ this.apiKey }`: \"\");\n        return `${ this.baseUrl }/api?module=${ module }${ query }${ apiKey }`;\n    }\n\n    getPostUrl(): string {\n        return `${ this.baseUrl }/api`;\n    }\n\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n        const procFunc = (module === \"proxy\") ? getJsonResult: getResult;\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: url,\n            provider: this\n        });\n\n        const connection: ConnectionInfo = {\n            url: url,\n            throttleSlotInterval: 1000,\n            throttleCallback: (attempt: number, url: string) => {\n                if (this.isCommunityResource()) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        let payloadStr: string = null;\n        if (payload) {\n            connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n            payloadStr = Object.keys(payload).map((key) => {\n                return `${ key }=${ payload[key] }`\n            }).join(\"&\");\n        }\n\n        const result = await fetchJson(connection, payloadStr, procFunc || getJsonResult);\n\n        this.emit(\"debug\", {\n            action: \"response\",\n            request: url,\n            response: deepCopy(result),\n            provider: this\n        });\n\n        return result;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n\n        switch (method) {\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: params.address,\n                    tag: params.blockTag\n                });\n\n            case \"getStorageAt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: params.address,\n                    position: params.position,\n                    tag: params.blockTag\n                });\n\n            case \"sendTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: params.signedTransaction\n                }, true).catch((error) => {\n                    return checkError(\"sendTransaction\", error, params.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: params.blockTag,\n                        boolean: (params.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n                throw new Error(\"getBlock by blockHash not implemented\");\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: params.transactionHash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: params.transactionHash\n                });\n\n            case \"call\": {\n                if (params.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"call\", error, params.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = getTransactionPostData(params.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return checkError(\"estimateGas\", error, params.transaction);\n                }\n            }\n\n            case \"getLogs\": {\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n\n            case \"getEtherPrice\":\n                if (this.network.name !== \"homestead\") { return 0.0; }\n                return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n\n            default:\n                break;\n         }\n\n        return super.perform(method, params);\n    }\n\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    async getHistory(addressOrName: string | Promise<string>, startBlock?: BlockTag, endBlock?: BlockTag): Promise<Array<TransactionResponse>> {\n        const params = {\n            action: \"txlist\",\n            address: (await this.resolveName(addressOrName)),\n            startblock: ((startBlock == null) ? 0: startBlock),\n            endblock: ((endBlock == null) ? 99999999: endBlock),\n            sort: \"asc\"\n        };\n\n        const result = await this.fetch(\"account\", params);\n\n        return result.map((tx: any) => {\n            [\"contractAddress\", \"to\"].forEach(function(key) {\n                if (tx[key] == \"\") { delete tx[key]; }\n            });\n            if (tx.creates == null && tx.contractAddress != null) {\n                tx.creates = tx.contractAddress;\n            }\n            const item = this.formatter.transactionResponse(tx);\n            if (tx.timeStamp) { item.timestamp = parseInt(tx.timeStamp); }\n            return item;\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n","\"use strict\";\n\nexport function shuffled(array: Array<any>): Array<any> {\n    array = array.slice();\n\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n\n    return array;\n}\n","\"use strict\";\n\nimport { Block, BlockWithTransactions, Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Network } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\n\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction now() { return (new Date()).getTime(); }\n\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks: Array<Network>): Network {\n    let result = null;\n\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n\n        // Null! We do not know our network; bail.\n        if (network == null) { return null; }\n\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n           }\n        } else {\n            result = network;\n        }\n    }\n\n    return result;\n}\n\nfunction median(values: Array<number>, maxDelta?: number): number {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n\n    return (a + b) / 2;\n}\n\nfunction serialize(value: any): string {\n    if (value === null) {\n        return \"null\";\n    } else if (typeof(value) === \"number\" || typeof(value) === \"boolean\") {\n        return JSON.stringify(value);\n    } else if (typeof(value) === \"string\") {\n        return value;\n    } else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    } else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    } else if (typeof(value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof(v) === \"function\") {\n                v = \"[function]\";\n            } else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n\n    throw new Error(\"unknown value type: \" + typeof(value));\n}\n\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n\n\nexport interface FallbackProviderConfig {\n    // The Provider\n    provider: Provider;\n\n    // The priority to favour this Provider; lower values are used first (higher priority)\n    priority?: number;\n\n    // Timeout before also triggering the next provider; this does not stop\n    // this provider and if its result comes back before a quorum is reached\n    // it will be incorporated into the vote\n    // - lower values will cause more network traffic but may result in a\n    //   faster result.\n    stallTimeout?: number;\n\n    // How much this provider contributes to the quorum; sometimes a specific\n    // provider may be more reliable or trustworthy than others, but usually\n    // this should be left as the default\n    weight?: number;\n};\n\n// A Staller is used to provide a delay to give a Provider a chance to response\n// before asking the next Provider to try.\ntype Staller = {\n    wait: (func: () => void) => Promise<void>\n    getPromise: () => Promise<void>,\n    cancel: () => void\n};\n\nfunction stall(duration: number): Staller {\n    let cancel: () => void = null;\n\n    let timer: NodeJS.Timer = null;\n    let promise = <Promise<void>>(new Promise((resolve) => {\n        cancel = function() {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        }\n        timer = setTimeout(cancel, duration);\n    }));\n\n    const wait = (func: () => void) => {\n        promise = promise.then(func);\n        return promise;\n    }\n\n    function getPromise(): Promise<void> {\n        return promise;\n    }\n\n    return { cancel, getPromise, wait };\n}\n\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\n\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n\n\n// @TODO: Make this an object with staller and cancel built-in\ninterface RunningConfig extends FallbackProviderConfig {\n    start?: number;\n    done?: boolean;\n    cancelled?: boolean;\n    runner?: Promise<any>;\n    staller?: Staller;\n    result?: any;\n    error?: Error;\n};\n\nfunction exposeDebugConfig(config: RunningConfig, now?: number): any {\n    const result: any = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) { result.start = config.start; }\n    if (now) { result.duration = (now - config.start); }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        } else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\n\nfunction normalizedTally(normalize: (value: any) => string, quorum: number): (configs: Array<RunningConfig>) => any {\n    return function(configs: Array<RunningConfig>): any {\n\n        // Count the votes for each result\n        const tally: { [ key: string]: { count: number, result: any } } = { };\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) { tally[value] = { count: 0, result: c.result }; }\n            tally[value].count++;\n        });\n\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n\n        // No quroum\n        return undefined;\n    }\n}\nfunction getProcessFunc(provider: FallbackProvider, method: string, params: { [ key: string ]: any }): (configs: Array<RunningConfig>) => any {\n\n    let normalize = serialize;\n\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function(configs: Array<RunningConfig>): number {\n                const values = configs.map((c) => c.result);\n\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) { return undefined; }\n\n                blockNumber = Math.ceil(blockNumber);\n\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) { blockNumber++; }\n\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n\n                return provider._highestBlockNumber;\n            };\n\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function(configs: Array<RunningConfig>): BigNumber {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            }\n\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function(configs: Array<RunningConfig>): number {\n                return median(configs.map((c) => c.result));\n            }\n\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function(tx: any): string {\n                if (tx == null) { return null; }\n\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            }\n            break;\n\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function(block: BlockWithTransactions): string {\n                    if (block == null) { return null; }\n\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            } else {\n                normalize = function(block: Block): string {\n                    if (block == null) { return null; }\n                    return serialize(block);\n                }\n            }\n            break;\n\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n\n}\n\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nasync function waitForSync(config: RunningConfig, blockNumber: number): Promise<BaseProvider> {\n    const provider = <BaseProvider>(config.provider);\n\n    if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n        return provider;\n    }\n\n    return poll(() => {\n        return new Promise((resolve, reject) => {\n            setTimeout(function() {\n\n                // We are synced\n                if (provider.blockNumber >= blockNumber) { return resolve(provider); }\n\n                // We're done; just quit\n                if (config.cancelled) { return resolve(null); }\n\n                // Try again, next block\n                return resolve(undefined);\n            }, 0);\n        });\n    }, { oncePoll: provider });\n}\n\nasync function getRunner(config: RunningConfig, currentBlockNumber: number, method: string, params: { [ key: string]: any }): Promise<any> {\n    let provider = config.provider;\n\n    switch (method) {\n        case \"getBlockNumber\":\n        case \"getGasPrice\":\n            return provider[method]();\n        case \"getEtherPrice\":\n            if ((<any>provider).getEtherPrice) {\n                return (<any>provider).getEtherPrice();\n            }\n            break;\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.address, params.blockTag || \"latest\");\n        case \"getStorageAt\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n        case \"getBlock\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[(params.includeTransactions ? \"getBlockWithTransactions\": \"getBlock\")](params.blockTag || params.blockHash);\n        case \"call\":\n        case \"estimateGas\":\n            if (params.blockTag && isHexString(params.blockTag)) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider[method](params.transaction);\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            return provider[method](params.transactionHash);\n        case \"getLogs\": {\n            let filter = params.filter;\n            if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                provider = await waitForSync(config, currentBlockNumber)\n            }\n            return provider.getLogs(filter);\n        }\n    }\n\n    return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n        method: method,\n        params: params\n    });\n}\n\nexport class FallbackProvider extends BaseProvider {\n    readonly providerConfigs: ReadonlyArray<FallbackProviderConfig>;\n    readonly quorum: number;\n\n    // Due to the highly asyncronous nature of the blockchain, we need\n    // to make sure we never unroll the blockNumber due to our random\n    // sample of backends\n    _highestBlockNumber: number;\n\n    constructor(providers: Array<Provider | FallbackProviderConfig>, quorum?: number) {\n        logger.checkNew(new.target, FallbackProvider);\n\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n\n        const providerConfigs: Array<FallbackProviderConfig> = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n\n            const config: FallbackProviderConfig = shallowCopy(configOrProvider);\n\n            if (config.priority == null) { config.priority = 1; }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000: 750;\n            }\n            if (config.weight == null) { config.weight = 1; }\n\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${ index }].weight`, weight);\n            }\n\n            return Object.freeze(config);\n        });\n\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n\n        if (quorum == null) {\n            quorum = total / 2;\n        } else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n\n        // Are all providers' networks are known\n        let networkOrReady: Network | Promise<Network> = checkNetworks(providerConfigs.map((c) => (<any>(c.provider)).network));\n\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n\n        super(networkOrReady);\n\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n\n        this._highestBlockNumber = -1;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        const networks = await Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n        return checkNetworks(networks);\n    }\n\n    async perform(method: string, params: { [name: string]: any }): Promise<any> {\n        // Sending transactions is special; always broadcast it to all backends\n        if (method === \"sendTransaction\") {\n            const results: Array<string | Error> = await Promise.all(this.providerConfigs.map((c) => {\n                return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                    return result.hash;\n                }, (error) => {\n                    return error;\n                });\n            }));\n\n            // Any success is good enough (other errors are likely \"already seen\" errors\n            for (let i = 0; i < results.length; i++) {\n                const result = results[i];\n                if (typeof(result) === \"string\") { return result; }\n            }\n\n            // They were all an error; pick the first error\n            throw results[0];\n        }\n\n        // We need to make sure we are in sync with our backends, so we need\n        // to know this before we can make a lot of calls\n        if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n            await this.getBlockNumber();\n        }\n\n        const processFunc = getProcessFunc(this, method, params);\n\n        // Shuffle the providers and then sort them by their priority; we\n        // shallowCopy them since we will store the result in them too\n        const configs: Array<RunningConfig> = shuffled(this.providerConfigs.map(shallowCopy));\n        configs.sort((a, b) => (a.priority - b.priority));\n\n        const currentBlockNumber = this._highestBlockNumber;\n\n        let i = 0;\n        let first = true;\n        while (true) {\n            const t0 = now();\n\n            // Compute the inflight weight (exclude anything past)\n            let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                                        .reduce((accum, c) => (accum + c.weight), 0);\n\n            // Start running enough to meet quorum\n            while (inflightWeight < this.quorum && i < configs.length) {\n                const config = configs[i++];\n\n                const rid = nextRid++;\n\n                config.start = now();\n                config.staller = stall(config.stallTimeout);\n                config.staller.wait(() => { config.staller = null; });\n\n                config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                    config.done = true;\n                    config.result = result;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                     }\n\n                }, (error) => {\n                    config.done = true;\n                    config.error = error;\n\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, now()),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                });\n\n                if (this.listenerCount(\"debug\")) {\n                    this.emit(\"debug\", {\n                        action: \"request\",\n                        rid: rid,\n                        backend: exposeDebugConfig(config, null),\n                        request: { method: method, params: deepCopy(params) },\n                        provider: this\n                    });\n                }\n\n                inflightWeight += config.weight;\n            }\n\n            // Wait for anything meaningful to finish or stall out\n            const waiting: Array<Promise<any>> = [ ];\n            configs.forEach((c) => {\n                if (c.done || !c.runner) { return; }\n                waiting.push(c.runner);\n                if (c.staller) { waiting.push(c.staller.getPromise()); }\n            });\n\n            if (waiting.length) { await Promise.race(waiting); }\n\n            // Check the quorum and process the results; the process function\n            // may additionally decide the quorum is not met\n            const results = configs.filter((c) => (c.done && c.error == null));\n            if (results.length >= this.quorum) {\n                const result = processFunc(results);\n                if (result !== undefined) {\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) { c.staller.cancel(); }\n                        c.cancelled = true;\n                    });\n                    return result;\n                }\n                if (!first) { await stall(100).getPromise(); }\n                first = false;\n            }\n\n            // No result, check for errors that should be forwarded\n            const errors = configs.reduce((accum, c) => {\n                if (!c.done || c.error == null) { return accum; }\n\n                const code = (<any>(c.error)).code;\n                if (ForwardErrors.indexOf(code) >= 0) {\n                    if (!accum[code]) { accum[code] = { error: c.error, weight: 0 }; }\n                    accum[code].weight += c.weight;\n                }\n\n                return accum;\n            }, <{ [ code: string ]: { error: Error, weight: number } }>({ }));\n\n            Object.keys(errors).forEach((errorCode: string) => {\n                const tally = errors[errorCode];\n                if (tally.weight < this.quorum) { return; }\n\n                // Shut down any stallers\n                configs.forEach(c => {\n                    if (c.staller) { c.staller.cancel(); }\n                    c.cancelled = true;\n                });\n\n                const e = <any>(tally.error);\n\n                const props: { [ name: string ]: any } = { };\n                ForwardProperties.forEach((name) => {\n                    if (e[name] == null) { return; }\n                    props[name] = e[name];\n                });\n\n                logger.throwError(e.reason || e.message, <any>errorCode, props);\n            });\n\n            // All configs have run to completion; we will never get more data\n            if (configs.filter((c) => !c.done).length === 0) { break; }\n        }\n\n        // Shut down any stallers; shouldn't be any\n        configs.forEach(c => {\n            if (c.staller) { c.staller.cancel(); }\n            c.cancelled = true;\n        });\n\n        return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n            method: method,\n            params: params,\n            //results: configs.map((c) => c.result),\n            //errors: configs.map((c) => c.error),\n            results: configs.map((c) => exposeDebugConfig(c)),\n            provider: this\n        });\n    }\n}\n","\"use strict\";\n\nconst IpcProvider: any = null;\n\nexport {\n    IpcProvider\n};\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { CommunityResourcable, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\"\n\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n    readonly apiKey: string;\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    readonly projectId: string;\n    readonly projectSecret: string;\n\n    static getWebSocketProvider(network?: Networkish, apiKey?: any): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        const apiKeyObj: { apiKey: string, projectId: string, projectSecret: string } = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n\n        if (apiKey == null) { return apiKeyObj; }\n\n        if (typeof(apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n\n        } else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof(apiKey.projectId) === \"string\"),\n                \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof(apiKey.projectSecret) === \"string\"),\n                \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n\n        } else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch(network ? network.name: \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        const connection: ConnectionInfo = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt: number, url: string) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n","\nimport { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Experimental\n\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    _pendingBatchAggregator: NodeJS.Timer;\n    _pendingBatch: Array<{\n        request: { method: string, params: Array<any>, id: number, jsonrpc: \"2.0\" },\n        resolve: (result: any) => void,\n        reject: (error: Error) => void\n    }>;\n\n    send(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [ ];\n        }\n\n        const inflightRequest: any = { request, resolve: null, reject: null };\n\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n\n        this._pendingBatch.push(inflightRequest);\n\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            (<any>error).code = payload.error.code;\n                            (<any>error).data = payload.error.data;\n                            inflightRequest.reject(error);\n                        } else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n\n            }, 10);\n        }\n\n        return promise;\n    }\n}\n","/* istanbul ignore file */\n\n\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\n\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey && typeof(apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n","\"use strict\";\n\nimport { Network, Networkish } from \"@ethersproject/networks\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { ConnectionInfo } from \"@ethersproject/web\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\n// These are load-balancer-based application IDs\nconst defaultApplicationIds: Record<string, string> = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\n\nexport class PocketProvider extends UrlJsonRpcProvider {\n    readonly applicationId: string;\n    readonly applicationSecretKey: string;\n    readonly loadBalancer: boolean;\n\n    constructor(network?: Networkish, apiKey?: any) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n\n        if (apiKey == null) {\n            const n = getStatic<(network: Networkish) => Network>(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n\n        }\n\n        super(network, apiKey);\n    }\n\n    static getApiKey(apiKey: any): any {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n\n        const apiKeyObj: { applicationId: string, applicationSecretKey: string, loadBalancer: boolean } = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n\n        } else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"),\n                \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"),\n                \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n\n        } else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n\n        return apiKeyObj;\n    }\n\n    static getUrl(network: Network, apiKey: any): ConnectionInfo {\n        let host: string = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${ host }/v1/lb/${ apiKey.applicationId }`\n        } else {\n            url = `https:/\\/${ host }/v1/${ apiKey.applicationId }`\n        }\n\n        const connection: ConnectionInfo = { url };\n\n        // Initialize empty headers\n        connection.headers = {}\n\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey\n        }\n\n        return connection;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n","\"use strict\";\n\nimport { Networkish } from \"@ethersproject/networks\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n\n// Exported Types\nexport type ExternalProvider = {\n    isMetaMask?: boolean;\n    isStatus?: boolean;\n    host?: string;\n    path?: string;\n    sendAsync?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    send?: (request: { method: string, params?: Array<any> }, callback: (error: any, response: any) => void) => void\n    request?: (request: { method: string, params?: Array<any> }) => Promise<any>\n}\n\nlet _nextId = 1;\n\nexport type JsonRpcFetchFunc = (method: string, params?: Array<any>) => Promise<any>;\n\ntype Web3LegacySend = (request: any, callback: (error: Error, response: any) => void) => void;\n\nfunction buildWeb3LegacyFetcher(provider: ExternalProvider, sendFunc: Web3LegacySend) : JsonRpcFetchFunc {\n    const fetcher = \"Web3LegacyFetcher\";\n\n    return function(method: string, params: Array<any>): Promise<any> {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n\n            sendFunc(request, (error, response) => {\n\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n\n                    return reject(error);\n                }\n\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    (<any>error).code = response.error.code;\n                    (<any>error).data = response.error.data;\n                    return reject(error);\n                }\n\n                resolve(response.result);\n            });\n        });\n    }\n}\n\nfunction buildEip1193Fetcher(provider: ExternalProvider): JsonRpcFetchFunc {\n    return function(method: string, params: Array<any>): Promise<any> {\n        if (params == null) { params = [ ]; }\n\n        const request = { method, params };\n\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n\n            return response;\n\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n\n            throw error;\n        });\n    }\n}\n\nexport class Web3Provider extends JsonRpcProvider {\n    readonly provider: ExternalProvider;\n    readonly jsonRpcFetchFunc: JsonRpcFetchFunc;\n\n    constructor(provider: ExternalProvider | JsonRpcFetchFunc, network?: Networkish) {\n        logger.checkNew(new.target, Web3Provider);\n\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n\n        let path: string = null;\n        let jsonRpcFetchFunc: JsonRpcFetchFunc = null;\n        let subprovider: ExternalProvider = null;\n\n        if (typeof(provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n\n        } else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n\n            subprovider = provider;\n\n            if (provider.request) {\n                if (path === \"\") { path = \"eip-1193:\"; }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            } else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            } else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            } else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n\n            if (!path) { path = \"unknown:\"; }\n        }\n\n        super(path, network);\n\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n\n    send(method: string, params: Array<any>): Promise<any> {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n","\"use strict\";\n\nimport {\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    Provider,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse\n} from \"@ethersproject/abstract-provider\";\n\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Network, Networkish } from \"@ethersproject/networks\";\n\nimport { BaseProvider, EnsProvider, EnsResolver, Resolver } from \"./base-provider\";\n\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider, FallbackProviderConfig } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { ExternalProvider, JsonRpcFetchFunc } from \"./web3-provider\";\n\nimport { CommunityResourcable, Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n////////////////////////\n// Helper Functions\n\nfunction getDefaultProvider(network?: Networkish, options?: any): BaseProvider {\n    if (network == null) { network = \"homestead\"; }\n\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof(network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n\n    return n._defaultProvider({\n        FallbackProvider,\n\n        AlchemyProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n\n        IpcProvider,\n    }, options);\n}\n\n////////////////////////\n// Exports\n\nexport {\n\n    // Abstract Providers (or Abstract-ish)\n    Provider,\n    BaseProvider,\n\n    Resolver,\n\n    UrlJsonRpcProvider,\n\n    ///////////////////////\n    // Concrete Providers\n\n    FallbackProvider,\n\n    AlchemyProvider,\n    AlchemyWebSocketProvider,\n    CloudflareProvider,\n    EtherscanProvider,\n    InfuraProvider,\n    InfuraWebSocketProvider,\n    JsonRpcProvider,\n    JsonRpcBatchProvider,\n    NodesmithProvider,\n    PocketProvider,\n    StaticJsonRpcProvider,\n    Web3Provider,\n    WebSocketProvider,\n\n    IpcProvider,\n\n\n    ///////////////////////\n    // Signer\n\n    JsonRpcSigner,\n\n\n    ///////////////////////\n    // Functions\n\n    getDefaultProvider,\n    getNetwork,\n    isCommunityResource,\n    isCommunityResourcable,\n    showThrottleMessage,\n\n\n    ///////////////////////\n    // Objects\n\n    Formatter,\n\n\n    ///////////////////////\n    // Types\n\n    Block,\n    BlockTag,\n    EventType,\n    FeeData,\n    Filter,\n    Log,\n    Listener,\n    TransactionReceipt,\n    TransactionRequest,\n    TransactionResponse,\n\n    ExternalProvider,\n    JsonRpcFetchFunc,\n\n    FallbackProviderConfig,\n\n    Network,\n    Networkish,\n\n    EnsProvider,\n    EnsResolver,\n\n    CommunityResourcable\n};\n\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n"],"names":["logger","Logger","defineReadOnly","object","name","value","Object","defineProperty","enumerable","writable","getStatic","ctor","key","i","prototype","getPrototypeOf","constructor","resolveProperties","promises","keys","map","Promise","resolve","then","v","all","results","reduce","accum","result","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","Array","isArray","isFrozen","length","error","throwArgumentError","_deepCopy","freeze","item","deepCopy","Description","info","this","ForkEvent","_isForkEvent","Provider","checkAbstract","block","getBlock","gasPrice","getGasPrice","catch","maxFeePerGas","maxPriorityFeePerGas","baseFeePerGas","BigNumber","mul","add","eventName","listener","on","off","_isProvider","ethDefaultProvider","network","func","providers","options","providerList","InfuraProvider","push","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","provider","indexOf","CloudflareProvider","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","chainId","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","getNetwork","standard","defaultProvider","UnicodeNormalizationForm","Utf8ErrorReason","BaseX","alphabet","charAt","_alphabetMap","source","arrayify","digits","carry","j","base","k","_leader","q","TypeError","bytes","Uint8Array","byte","Error","reverse","Base58","ignoreFunc","reason","offset","output","badCodepoint","BAD_PREFIX","UNEXPECTED_CONTINUE","o","OVERRUN","Utf8ErrorFuncs","ignore","replace","OVERLONG","getUtf8CodePoints","onError","c","extraLength","overlongMask","res","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","toUtf8Bytes","str","form","current","checkNormalize","normalize","charCodeAt","c2","pair","_toUtf8String","codePoints","codePoint","String","fromCharCode","join","toUtf8String","toUtf8CodePoints","createTable","data","parseInt","lo","split","forEach","comps","createRangeTable","hi","l","h","matchMap","ranges","range","d","e","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","s","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","substring","Table_C_ranges","nameprep","match","toLowerCase","values","codes","code","codesTableB2","codepoint","shift","_nameprepTableB2","NFKC","version","Zeros","fill","Partition","RegExp","namehash","partition","label","keccak256","concat","hexlify","sha256","hash","update","digest","decode","textData","atob","encode","btoa","getUrl","href","request","method","headers","body","skipFetchSetup","mode","cache","credentials","redirect","referrer","fetch","response","arrayBuffer","get","statusCode","status","statusMessage","statusText","staller","duration","setTimeout","bodyify","type","isBytesLike","trim","fetchJson","connection","json","processFunc","updated","filter","attemptLimit","throttleLimit","assertArgument","throttleCallback","throttleSlotInterval","allow304","timeout","allowGzip","user","password","allowInsecureAuthentication","throwError","argument","authorization","base64Encode","reData","dataMatch","base64Decode","requestBody","requestMethod","flatHeaders","header","runningTimeout","timer","promise","reject","makeError","cancel","clearTimeout","runningFetch","attempt","location","tryAgain","stall","retryAfter","Math","random","pow","serverError","throttleRetry","race","_fetchData","JSON","parse","poll","floor","ceiling","interval","done","retryLimit","check","oncePoll","once","onceBlock","Zero","assert","val","msg","equal","r","utils","exports","zero2","word","toHex","toString","toArray","enc","slice","arr","minAssert","minUtils","getNAF","num","w","bits","naf","max","bitLength","ws","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","m8","d1","d2","cmpn","u1","u2","m14","m24","cachedProperty","obj","computer","call","parseBytes","intFromLE","BN","BaseCurve","conf","p","red","prime","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","a","jpoint","b","mixedAdd","points","neg","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","x","getX","getY","isEven","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","create","module","superCtor","super_","configurable","TempCtor","ShortCurve","Base","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits","Point","isRed","inf","forceRed","JPoint","zOne","modn","lambda","betas","_getEndoRoots","lambdas","redMul","basis","vec","_getEndoBasis","ntinv","redSqrt","redAdd","redSub","a0","b0","a1","b1","a2","b2","prevR","aprxSqrt","ushrn","u","x1","y1","x2","y2","len1","sqr","negative","_endoSplit","v1","v2","c1","divRound","p1","p2","q1","q2","odd","redSqr","redIAdd","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","ineg","fromJSON","pre","endoMul","toJSON","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","require$$0","short","require$$1","mont","edwards","curves","PresetCurve","defineCurve","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","seed","_update","_hmac","kmac","reseed","addEnc","generate","temp","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","getPrivate","umod","derive","sign","verify","signature","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","rmPadding","constructLength","octets","log","LN2","rlen","slen","toDER","backHalf","rand","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","require$$2","require$$3","eddsa","_curve","getCurve","SigningKey","privateKey","other","p0","publicKey","digestBytes","splitSignature","hexZeroPad","otherKey","otherKeyPair","computePublicKey","_isSigningKey","compressed","signingKey","TransactionTypes","handleAddress","getAddress","handleNumber","recoverAddress","hexDataSlice","computeAddress","sig","rs","recoverPublicKey","formatNumber","stripZeros","toHexString","accessSetify","addr","storageKeys","address","storageKey","hexDataLength","accessListify","set","sort","localeCompare","formatAccessList","_serializeEip1559","transaction","fields","gasLimit","to","accessList","hexConcat","RLP","_serializeEip2930","_parseEipSignature","tx","serialize","recid","toNumber","from","console","rawTransaction","payload","isZero","raw","_parse","_parseEip2930","_parseEip1559","operation","transactionType","Formatter","checkNew","formats","getDefaultFormats","bind","bigNumber","blockTag","hex","allowNull","blockHash","blockNumber","transactionIndex","confirmations","uint256","creates","transactionRequest","receiptLog","transactionHash","topics","arrayOf","logIndex","receipt","contractAddress","root","gasUsed","logsBloom","logs","cumulativeGasUsed","effectiveGasPrice","parentHash","timestamp","difficulty","miner","extraData","transactions","blockWithTransactions","transactionResponse","fromBlock","toBlock","filterLog","removed","allowFalsish","strict","isHexString","getContractAddress","hexValue","format","author","_difficulty","_block","gas","input","networkId","parseTransaction","byzantium","checkKey","checkValue","nullValue","replaceValue","array","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","checkTopic","topic","serializeTopics","pop","unique","sorted","getEventTag","isForkEvent","warn","getTime","Date","PollableEvents","Event","tag","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","Resolver","resolvedAddress","formatter","selector","parameters","CALL_EXCEPTION","coinType","hexBytes","coinInfo","words","bech32","unshift","HashZero","callAddress","_fetchBytes","_getAddress","linkage","content","getText","avatar","scheme","_resolvedAddress","owner","tokenId","tokenOwner","balance","metadataUrl","metadata","stringify","imageUrl","image","ipfs","swarm","keyBytes","defaultFormatter","nextPollId","BaseProvider","_events","_emitted","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","emit","_maxInternalBlockNumber","_lastBlockNumber","_pollingInterval","_fastQueryDate","_network","event","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","getTransactionReceipt","getLogs","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","removeListener","lastBlockNumber","startBlock","scannedBlock","replaceHandler","__awaiter","getTransactionCount","getTransaction","mined","getBlockWithTransactions","ti","waitForTransaction","cancelled","replacement","_wrapTransaction","unref","addressOrName","_getBlockTag","params","position","expectedHash","returnedHash","wait","confirms","signedTransaction","hexTx","_getTransactionRequest","resolveName","blockHashOrBlockTag","includeTransactions","blockWithTxs","_getBlock","_getFilter","_getResolver","getResolver","resolver","reverseName","resolverAddress","nameOrAddress","getAvatar","pollable","_startEvent","_addEventListener","args","stopped","eventTag","apply","_stopEvent","removeAllListeners","found","_superPropBase","property","_get","Reflect","target","receiver","desc","getOwnPropertyDescriptor","arguments","allowedTransactionKeys","forwardErrors","Signer","_checkProvider","getBalance","checkTransaction","estimateGas","populateTransaction","signTransaction","signedTx","sendTransaction","getFeeData","hasEip1559","feeData","getChainId","_isSigner","id","text","padding","NegativeOne","One","MaxUint256","hexTrue","hexFalse","domainFieldTypes","verifyingContract","salt","domainFieldNames","checkString","domainChecks","getBaseEncoder","signed","width","boundsUpper","mask","boundsLower","lt","gt","toTwos","padOffset","hexPadRight","encodeType","TypedDataEncoder","types","links","parents","subtypes","uniqueNames","field","baseType","primaryTypes","checkCircular","child","subtype","primaryType","st","_types","encoder","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","callback","_visit","domain","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","message","errorGas","checkError","responseText","getResult","getLowerCase","_constructorGuard","JsonRpcSigner","constructorGuard","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","sender","hexlifyTransaction","sendUncheckedTransaction","_TypedDataEncoder","populated","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","getSigner","connectUnchecked","jsonrpc","action","prepareRequest","_startPending","_pendingFilter","self","pendingFilter","filterId","hashes","seq","listenerCount","allowExtra","properties","allowed","WS","WebSocket","NextId","WebSocketProvider","_wsReady","_websocket","onopen","_requests","onmessage","messageEvent","_subs","subscription","fauxPoll","_detectNetwork","rid","param","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","StaticJsonRpcProvider","_super","UrlJsonRpcProvider","apiKey","defaultApiKey","AlchemyWebSocketProvider","host","getTransactionPostData","maxFeePerGs","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getPostData","procFunc","payloadStr","txhash","postData","topic0","blocks","parseFloat","ethusd","endBlock","startblock","endblock","timeStamp","shuffled","checkNetworks","median","maxDelta","middle","nextRid","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","start","getProcessFunc","configs","_highestBlockNumber","tally","count","normalizedTally","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","isProvider","stallTimeout","priority","total","first","t0","inflightWeight","backend","waiting","errors","errorCode","props","IpcProvider","defaultProjectId","InfuraWebSocketProvider","projectId","projectSecret","apiKeyObj","JsonRpcBatchProvider","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","NodesmithProvider","defaultApplicationIds","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","Web3Provider","path","jsonRpcFetchFunc","subprovider","isMetaMask","buildEip1193Fetcher","sendAsync","getDefaultProvider","ALPHABET","ALPHABET_MAP","polymodStep","prefixChk","chk","__decode","LIMIT","lowered","uppered","toUpperCase","lastIndexOf","wordChars","convert","inBits","outBits","pad","maxV","decodeUnsafe","toWordsUnsafe","toWords","fromWordsUnsafe","fromWords","require","common","sha","ripemd","hmac","sha1","sha224","sha384","sha512","ripemd160","BlockHash","pending","pendingTotal","blockSize","padLength","endian","_delta8","_delta32","join32","_pad","_digest","Hmac","Hash","inner","outer","rotl32","sum32","sum32_3","sum32_4","RIPEMD160","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32","shaCommon","sum32_5","ft_1","sha1_K","SHA1","W","SHA256","SHA224","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","T1","T2","SHA512","SHA384","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","rotr32","p32","isSurrogatePair","htonl","zero8","end","pos"],"sourceRoot":""}